// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.1
// source: BreakoutSnapShot.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Obf: OLKOKCBEABM
type BreakoutSnapShot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientGameTime           uint64                            `protobuf:"varint,1,opt,name=client_game_time,json=clientGameTime,proto3" json:"client_game_time,omitempty"`
	ServerGameTime           uint64                            `protobuf:"varint,2,opt,name=server_game_time,json=serverGameTime,proto3" json:"server_game_time,omitempty"`
	BallList                 []*BreakoutPhysicalObject         `protobuf:"bytes,3,rep,name=ball_list,json=ballList,proto3" json:"ball_list,omitempty"`
	PhysicalObjectList       []*BreakoutPhysicalObject         `protobuf:"bytes,4,rep,name=physical_object_list,json=physicalObjectList,proto3" json:"physical_object_list,omitempty"`
	ActionList               []*BreakoutAction                 `protobuf:"bytes,5,rep,name=action_list,json=actionList,proto3" json:"action_list,omitempty"`
	WaveIndex                uint32                            `protobuf:"varint,6,opt,name=wave_index,json=waveIndex,proto3" json:"wave_index,omitempty"`
	IsFinish                 bool                              `protobuf:"varint,7,opt,name=is_finish,json=isFinish,proto3" json:"is_finish,omitempty"`
	Score                    uint32                            `protobuf:"varint,8,opt,name=score,proto3" json:"score,omitempty"`
	Combo                    uint32                            `protobuf:"varint,9,opt,name=combo,proto3" json:"combo,omitempty"`
	MaxCombo                 uint32                            `protobuf:"varint,10,opt,name=max_combo,json=maxCombo,proto3" json:"max_combo,omitempty"`
	LifeCount                uint32                            `protobuf:"varint,11,opt,name=life_count,json=lifeCount,proto3" json:"life_count,omitempty"`
	WaveSuiteIndex           uint32                            `protobuf:"varint,12,opt,name=wave_suite_index,json=waveSuiteIndex,proto3" json:"wave_suite_index,omitempty"`
	SpawnPointList           []*BreakoutSpawnPoint             `protobuf:"bytes,13,rep,name=spawn_point_list,json=spawnPointList,proto3" json:"spawn_point_list,omitempty"`
	RemainingBossHp          uint32                            `protobuf:"varint,14,opt,name=remaining_boss_hp,json=remainingBossHp,proto3" json:"remaining_boss_hp,omitempty"`
	BrickElementReactionList []*BreakoutElementReactionCounter `protobuf:"bytes,15,rep,name=brick_element_reaction_list,json=brickElementReactionList,proto3" json:"brick_element_reaction_list,omitempty"`
	BallElementReactionList  []*BreakoutElementReactionCounter `protobuf:"bytes,16,rep,name=ball_element_reaction_list,json=ballElementReactionList,proto3" json:"ball_element_reaction_list,omitempty"`
	UidInfoList              []*BreakoutSyncConnectUidInfo     `protobuf:"bytes,17,rep,name=uid_info_list,json=uidInfoList,proto3" json:"uid_info_list,omitempty"`
	DynamicObjectList        []*BreakoutPhysicalObject         `protobuf:"bytes,18,rep,name=dynamic_object_list,json=dynamicObjectList,proto3" json:"dynamic_object_list,omitempty"`
	IdIndexList              []uint32                          `protobuf:"varint,19,rep,packed,name=id_index_list,json=idIndexList,proto3" json:"id_index_list,omitempty"`
	RawClientGameTime        int32                             `protobuf:"varint,20,opt,name=raw_client_game_time,json=rawClientGameTime,proto3" json:"raw_client_game_time,omitempty"`
}

func (x *BreakoutSnapShot) Reset() {
	*x = BreakoutSnapShot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BreakoutSnapShot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreakoutSnapShot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreakoutSnapShot) ProtoMessage() {}

func (x *BreakoutSnapShot) ProtoReflect() protoreflect.Message {
	mi := &file_BreakoutSnapShot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreakoutSnapShot.ProtoReflect.Descriptor instead.
func (*BreakoutSnapShot) Descriptor() ([]byte, []int) {
	return file_BreakoutSnapShot_proto_rawDescGZIP(), []int{0}
}

func (x *BreakoutSnapShot) GetClientGameTime() uint64 {
	if x != nil {
		return x.ClientGameTime
	}
	return 0
}

func (x *BreakoutSnapShot) GetServerGameTime() uint64 {
	if x != nil {
		return x.ServerGameTime
	}
	return 0
}

func (x *BreakoutSnapShot) GetBallList() []*BreakoutPhysicalObject {
	if x != nil {
		return x.BallList
	}
	return nil
}

func (x *BreakoutSnapShot) GetPhysicalObjectList() []*BreakoutPhysicalObject {
	if x != nil {
		return x.PhysicalObjectList
	}
	return nil
}

func (x *BreakoutSnapShot) GetActionList() []*BreakoutAction {
	if x != nil {
		return x.ActionList
	}
	return nil
}

func (x *BreakoutSnapShot) GetWaveIndex() uint32 {
	if x != nil {
		return x.WaveIndex
	}
	return 0
}

func (x *BreakoutSnapShot) GetIsFinish() bool {
	if x != nil {
		return x.IsFinish
	}
	return false
}

func (x *BreakoutSnapShot) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *BreakoutSnapShot) GetCombo() uint32 {
	if x != nil {
		return x.Combo
	}
	return 0
}

func (x *BreakoutSnapShot) GetMaxCombo() uint32 {
	if x != nil {
		return x.MaxCombo
	}
	return 0
}

func (x *BreakoutSnapShot) GetLifeCount() uint32 {
	if x != nil {
		return x.LifeCount
	}
	return 0
}

func (x *BreakoutSnapShot) GetWaveSuiteIndex() uint32 {
	if x != nil {
		return x.WaveSuiteIndex
	}
	return 0
}

func (x *BreakoutSnapShot) GetSpawnPointList() []*BreakoutSpawnPoint {
	if x != nil {
		return x.SpawnPointList
	}
	return nil
}

func (x *BreakoutSnapShot) GetRemainingBossHp() uint32 {
	if x != nil {
		return x.RemainingBossHp
	}
	return 0
}

func (x *BreakoutSnapShot) GetBrickElementReactionList() []*BreakoutElementReactionCounter {
	if x != nil {
		return x.BrickElementReactionList
	}
	return nil
}

func (x *BreakoutSnapShot) GetBallElementReactionList() []*BreakoutElementReactionCounter {
	if x != nil {
		return x.BallElementReactionList
	}
	return nil
}

func (x *BreakoutSnapShot) GetUidInfoList() []*BreakoutSyncConnectUidInfo {
	if x != nil {
		return x.UidInfoList
	}
	return nil
}

func (x *BreakoutSnapShot) GetDynamicObjectList() []*BreakoutPhysicalObject {
	if x != nil {
		return x.DynamicObjectList
	}
	return nil
}

func (x *BreakoutSnapShot) GetIdIndexList() []uint32 {
	if x != nil {
		return x.IdIndexList
	}
	return nil
}

func (x *BreakoutSnapShot) GetRawClientGameTime() int32 {
	if x != nil {
		return x.RawClientGameTime
	}
	return 0
}

var File_BreakoutSnapShot_proto protoreflect.FileDescriptor

var file_BreakoutSnapShot_proto_rawDesc = []byte{
	0x0a, 0x16, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68,
	0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x6f,
	0x75, 0x74, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x6f, 0x75, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x6f, 0x75, 0x74,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x55, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef,
	0x07, 0x0a, 0x10, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x53,
	0x68, 0x6f, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x62, 0x61, 0x6c, 0x6c, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x42, 0x72, 0x65,
	0x61, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a,
	0x14, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x12, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x42, 0x72, 0x65, 0x61, 0x6b, 0x6f, 0x75, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x61,
	0x76, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x77, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6d,
	0x62, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x62, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x66, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x77, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x75, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x77, 0x61, 0x76, 0x65, 0x53, 0x75,
	0x69, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3d, 0x0a, 0x10, 0x73, 0x70, 0x61, 0x77,
	0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x70, 0x61,
	0x77, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x73, 0x73, 0x5f, 0x68, 0x70, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x73,
	0x73, 0x48, 0x70, 0x12, 0x5e, 0x0a, 0x1b, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x5f, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b,
	0x6f, 0x75, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x18, 0x62, 0x72, 0x69, 0x63, 0x6b,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x1a, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x6f,
	0x75, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x17, 0x62, 0x61, 0x6c, 0x6c, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x75, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b,
	0x6f, 0x75, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x69,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x75, 0x69, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x47, 0x0a, 0x13, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x6f, 0x75, 0x74, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63,
	0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x11, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x69,
	0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x13, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0b, 0x69, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x14, 0x72, 0x61, 0x77, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x72,
	0x61, 0x77, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x42, 0x06, 0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_BreakoutSnapShot_proto_rawDescOnce sync.Once
	file_BreakoutSnapShot_proto_rawDescData = file_BreakoutSnapShot_proto_rawDesc
)

func file_BreakoutSnapShot_proto_rawDescGZIP() []byte {
	file_BreakoutSnapShot_proto_rawDescOnce.Do(func() {
		file_BreakoutSnapShot_proto_rawDescData = protoimpl.X.CompressGZIP(file_BreakoutSnapShot_proto_rawDescData)
	})
	return file_BreakoutSnapShot_proto_rawDescData
}

var file_BreakoutSnapShot_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_BreakoutSnapShot_proto_goTypes = []interface{}{
	(*BreakoutSnapShot)(nil),               // 0: BreakoutSnapShot
	(*BreakoutPhysicalObject)(nil),         // 1: BreakoutPhysicalObject
	(*BreakoutAction)(nil),                 // 2: BreakoutAction
	(*BreakoutSpawnPoint)(nil),             // 3: BreakoutSpawnPoint
	(*BreakoutElementReactionCounter)(nil), // 4: BreakoutElementReactionCounter
	(*BreakoutSyncConnectUidInfo)(nil),     // 5: BreakoutSyncConnectUidInfo
}
var file_BreakoutSnapShot_proto_depIdxs = []int32{
	1, // 0: BreakoutSnapShot.ball_list:type_name -> BreakoutPhysicalObject
	1, // 1: BreakoutSnapShot.physical_object_list:type_name -> BreakoutPhysicalObject
	2, // 2: BreakoutSnapShot.action_list:type_name -> BreakoutAction
	3, // 3: BreakoutSnapShot.spawn_point_list:type_name -> BreakoutSpawnPoint
	4, // 4: BreakoutSnapShot.brick_element_reaction_list:type_name -> BreakoutElementReactionCounter
	4, // 5: BreakoutSnapShot.ball_element_reaction_list:type_name -> BreakoutElementReactionCounter
	5, // 6: BreakoutSnapShot.uid_info_list:type_name -> BreakoutSyncConnectUidInfo
	1, // 7: BreakoutSnapShot.dynamic_object_list:type_name -> BreakoutPhysicalObject
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_BreakoutSnapShot_proto_init() }
func file_BreakoutSnapShot_proto_init() {
	if File_BreakoutSnapShot_proto != nil {
		return
	}
	file_BreakoutPhysicalObject_proto_init()
	file_BreakoutAction_proto_init()
	file_BreakoutSpawnPoint_proto_init()
	file_BreakoutElementReactionCounter_proto_init()
	file_BreakoutSyncConnectUidInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_BreakoutSnapShot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreakoutSnapShot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_BreakoutSnapShot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_BreakoutSnapShot_proto_goTypes,
		DependencyIndexes: file_BreakoutSnapShot_proto_depIdxs,
		MessageInfos:      file_BreakoutSnapShot_proto_msgTypes,
	}.Build()
	File_BreakoutSnapShot_proto = out.File
	file_BreakoutSnapShot_proto_rawDesc = nil
	file_BreakoutSnapShot_proto_goTypes = nil
	file_BreakoutSnapShot_proto_depIdxs = nil
}
