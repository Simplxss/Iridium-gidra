// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.1
// source: BrickBreakerSettleNotify.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Obf: DIAJCONBEOL
type BrickBreakerSettleNotify_SettleReason int32

const (
	BrickBreakerSettleNotify_SETTLE_REASON_TIME_OUT BrickBreakerSettleNotify_SettleReason = 0
	BrickBreakerSettleNotify_SETTLE_PLAY_END        BrickBreakerSettleNotify_SettleReason = 1
	BrickBreakerSettleNotify_SETTLE_PLAYER_QUIT     BrickBreakerSettleNotify_SettleReason = 2
	BrickBreakerSettleNotify_SETTLE_LIFE_COUNT      BrickBreakerSettleNotify_SettleReason = 3
)

// Enum value maps for BrickBreakerSettleNotify_SettleReason.
var (
	BrickBreakerSettleNotify_SettleReason_name = map[int32]string{
		0: "SETTLE_REASON_TIME_OUT",
		1: "SETTLE_PLAY_END",
		2: "SETTLE_PLAYER_QUIT",
		3: "SETTLE_LIFE_COUNT",
	}
	BrickBreakerSettleNotify_SettleReason_value = map[string]int32{
		"SETTLE_REASON_TIME_OUT": 0,
		"SETTLE_PLAY_END":        1,
		"SETTLE_PLAYER_QUIT":     2,
		"SETTLE_LIFE_COUNT":      3,
	}
)

func (x BrickBreakerSettleNotify_SettleReason) Enum() *BrickBreakerSettleNotify_SettleReason {
	p := new(BrickBreakerSettleNotify_SettleReason)
	*p = x
	return p
}

func (x BrickBreakerSettleNotify_SettleReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BrickBreakerSettleNotify_SettleReason) Descriptor() protoreflect.EnumDescriptor {
	return file_BrickBreakerSettleNotify_proto_enumTypes[0].Descriptor()
}

func (BrickBreakerSettleNotify_SettleReason) Type() protoreflect.EnumType {
	return &file_BrickBreakerSettleNotify_proto_enumTypes[0]
}

func (x BrickBreakerSettleNotify_SettleReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BrickBreakerSettleNotify_SettleReason.Descriptor instead.
func (BrickBreakerSettleNotify_SettleReason) EnumDescriptor() ([]byte, []int) {
	return file_BrickBreakerSettleNotify_proto_rawDescGZIP(), []int{0, 0}
}

// CmdId: 5789
// Obf: BIICAPPJJBM
type BrickBreakerSettleNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason          BrickBreakerSettleNotify_SettleReason `protobuf:"varint,5,opt,name=reason,proto3,enum=BrickBreakerSettleNotify_SettleReason" json:"reason,omitempty"`
	Combo           uint32                                `protobuf:"varint,14,opt,name=combo,proto3" json:"combo,omitempty"`
	UpdateSkillList []*Uint32Pair                         `protobuf:"bytes,12,rep,name=update_skill_list,json=updateSkillList,proto3" json:"update_skill_list,omitempty"`
	Time            uint32                                `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Score           uint32                                `protobuf:"varint,10,opt,name=score,proto3" json:"score,omitempty"`
	IsSingleMode    bool                                  `protobuf:"varint,2,opt,name=is_single_mode,json=isSingleMode,proto3" json:"is_single_mode,omitempty"`
	IsDungeon       bool                                  `protobuf:"varint,4,opt,name=is_dungeon,json=isDungeon,proto3" json:"is_dungeon,omitempty"`
	GalleryId       uint32                                `protobuf:"varint,13,opt,name=gallery_id,json=galleryId,proto3" json:"gallery_id,omitempty"`
	LevelId         uint32                                `protobuf:"varint,3,opt,name=level_id,json=levelId,proto3" json:"level_id,omitempty"`
	IsNewRecord     bool                                  `protobuf:"varint,15,opt,name=is_new_record,json=isNewRecord,proto3" json:"is_new_record,omitempty"`
}

func (x *BrickBreakerSettleNotify) Reset() {
	*x = BrickBreakerSettleNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BrickBreakerSettleNotify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrickBreakerSettleNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrickBreakerSettleNotify) ProtoMessage() {}

func (x *BrickBreakerSettleNotify) ProtoReflect() protoreflect.Message {
	mi := &file_BrickBreakerSettleNotify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrickBreakerSettleNotify.ProtoReflect.Descriptor instead.
func (*BrickBreakerSettleNotify) Descriptor() ([]byte, []int) {
	return file_BrickBreakerSettleNotify_proto_rawDescGZIP(), []int{0}
}

func (x *BrickBreakerSettleNotify) GetReason() BrickBreakerSettleNotify_SettleReason {
	if x != nil {
		return x.Reason
	}
	return BrickBreakerSettleNotify_SETTLE_REASON_TIME_OUT
}

func (x *BrickBreakerSettleNotify) GetCombo() uint32 {
	if x != nil {
		return x.Combo
	}
	return 0
}

func (x *BrickBreakerSettleNotify) GetUpdateSkillList() []*Uint32Pair {
	if x != nil {
		return x.UpdateSkillList
	}
	return nil
}

func (x *BrickBreakerSettleNotify) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *BrickBreakerSettleNotify) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *BrickBreakerSettleNotify) GetIsSingleMode() bool {
	if x != nil {
		return x.IsSingleMode
	}
	return false
}

func (x *BrickBreakerSettleNotify) GetIsDungeon() bool {
	if x != nil {
		return x.IsDungeon
	}
	return false
}

func (x *BrickBreakerSettleNotify) GetGalleryId() uint32 {
	if x != nil {
		return x.GalleryId
	}
	return 0
}

func (x *BrickBreakerSettleNotify) GetLevelId() uint32 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *BrickBreakerSettleNotify) GetIsNewRecord() bool {
	if x != nil {
		return x.IsNewRecord
	}
	return false
}

var File_BrickBreakerSettleNotify_proto protoreflect.FileDescriptor

var file_BrickBreakerSettleNotify_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x42, 0x72, 0x69, 0x63, 0x6b, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x10, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x50, 0x61, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe6, 0x03, 0x0a, 0x18, 0x42, 0x72, 0x69, 0x63, 0x6b, 0x42, 0x72, 0x65, 0x61,
	0x6b, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x3e, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x42, 0x72, 0x69, 0x63, 0x6b, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x12, 0x37, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6e, 0x65,
	0x77, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x6e, 0x0a, 0x0c, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x16, 0x53,
	0x45, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x51, 0x55,
	0x49, 0x54, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x4c,
	0x49, 0x46, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x03, 0x42, 0x06, 0x5a, 0x04, 0x2f,
	0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_BrickBreakerSettleNotify_proto_rawDescOnce sync.Once
	file_BrickBreakerSettleNotify_proto_rawDescData = file_BrickBreakerSettleNotify_proto_rawDesc
)

func file_BrickBreakerSettleNotify_proto_rawDescGZIP() []byte {
	file_BrickBreakerSettleNotify_proto_rawDescOnce.Do(func() {
		file_BrickBreakerSettleNotify_proto_rawDescData = protoimpl.X.CompressGZIP(file_BrickBreakerSettleNotify_proto_rawDescData)
	})
	return file_BrickBreakerSettleNotify_proto_rawDescData
}

var file_BrickBreakerSettleNotify_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_BrickBreakerSettleNotify_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_BrickBreakerSettleNotify_proto_goTypes = []interface{}{
	(BrickBreakerSettleNotify_SettleReason)(0), // 0: BrickBreakerSettleNotify.SettleReason
	(*BrickBreakerSettleNotify)(nil),           // 1: BrickBreakerSettleNotify
	(*Uint32Pair)(nil),                         // 2: Uint32Pair
}
var file_BrickBreakerSettleNotify_proto_depIdxs = []int32{
	0, // 0: BrickBreakerSettleNotify.reason:type_name -> BrickBreakerSettleNotify.SettleReason
	2, // 1: BrickBreakerSettleNotify.update_skill_list:type_name -> Uint32Pair
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_BrickBreakerSettleNotify_proto_init() }
func file_BrickBreakerSettleNotify_proto_init() {
	if File_BrickBreakerSettleNotify_proto != nil {
		return
	}
	file_Uint32Pair_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_BrickBreakerSettleNotify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrickBreakerSettleNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_BrickBreakerSettleNotify_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_BrickBreakerSettleNotify_proto_goTypes,
		DependencyIndexes: file_BrickBreakerSettleNotify_proto_depIdxs,
		EnumInfos:         file_BrickBreakerSettleNotify_proto_enumTypes,
		MessageInfos:      file_BrickBreakerSettleNotify_proto_msgTypes,
	}.Build()
	File_BrickBreakerSettleNotify_proto = out.File
	file_BrickBreakerSettleNotify_proto_rawDesc = nil
	file_BrickBreakerSettleNotify_proto_goTypes = nil
	file_BrickBreakerSettleNotify_proto_depIdxs = nil
}
