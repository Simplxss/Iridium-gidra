// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.1
// source: GCGSkillPreviewInfo.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Obf: OOGGELKHODM
type GCGSkillPreviewInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChangeOnstageCharacterList []*GCGSkillPreviewOnstageChangeInfo            `protobuf:"bytes,5,rep,name=change_onstage_character_list,json=changeOnstageCharacterList,proto3" json:"change_onstage_character_list,omitempty"`
	CardTokenChangeMap         map[uint32]*GCGSkillPreviewTokenChangeInfo     `protobuf:"bytes,6,rep,name=card_token_change_map,json=cardTokenChangeMap,proto3" json:"card_token_change_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExtraInfo                  *GCGSkillPreviewExtraInfo                      `protobuf:"bytes,4,opt,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty"`
	OJDLMJCEAIK                []*GCGSkillPreviewCardInfo                     `protobuf:"bytes,8,rep,name=OJDLMJCEAIK,proto3" json:"OJDLMJCEAIK,omitempty"`
	SkillId                    uint32                                         `protobuf:"varint,14,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	MAKCCCFPDJE                []*GCGSkillPreviewCardInfo                     `protobuf:"bytes,15,rep,name=MAKCCCFPDJE,proto3" json:"MAKCCCFPDJE,omitempty"`
	HpInfoMap                  map[uint32]*GCGSkillPreviewHpInfo              `protobuf:"bytes,13,rep,name=hp_info_map,json=hpInfoMap,proto3" json:"hp_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReactionInfoMap            map[uint32]*GCGSkillPreviewElementReactionInfo `protobuf:"bytes,2,rep,name=reaction_info_map,json=reactionInfoMap,proto3" json:"reaction_info_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GCGSkillPreviewInfo) Reset() {
	*x = GCGSkillPreviewInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GCGSkillPreviewInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCGSkillPreviewInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCGSkillPreviewInfo) ProtoMessage() {}

func (x *GCGSkillPreviewInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GCGSkillPreviewInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCGSkillPreviewInfo.ProtoReflect.Descriptor instead.
func (*GCGSkillPreviewInfo) Descriptor() ([]byte, []int) {
	return file_GCGSkillPreviewInfo_proto_rawDescGZIP(), []int{0}
}

func (x *GCGSkillPreviewInfo) GetChangeOnstageCharacterList() []*GCGSkillPreviewOnstageChangeInfo {
	if x != nil {
		return x.ChangeOnstageCharacterList
	}
	return nil
}

func (x *GCGSkillPreviewInfo) GetCardTokenChangeMap() map[uint32]*GCGSkillPreviewTokenChangeInfo {
	if x != nil {
		return x.CardTokenChangeMap
	}
	return nil
}

func (x *GCGSkillPreviewInfo) GetExtraInfo() *GCGSkillPreviewExtraInfo {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

func (x *GCGSkillPreviewInfo) GetOJDLMJCEAIK() []*GCGSkillPreviewCardInfo {
	if x != nil {
		return x.OJDLMJCEAIK
	}
	return nil
}

func (x *GCGSkillPreviewInfo) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *GCGSkillPreviewInfo) GetMAKCCCFPDJE() []*GCGSkillPreviewCardInfo {
	if x != nil {
		return x.MAKCCCFPDJE
	}
	return nil
}

func (x *GCGSkillPreviewInfo) GetHpInfoMap() map[uint32]*GCGSkillPreviewHpInfo {
	if x != nil {
		return x.HpInfoMap
	}
	return nil
}

func (x *GCGSkillPreviewInfo) GetReactionInfoMap() map[uint32]*GCGSkillPreviewElementReactionInfo {
	if x != nil {
		return x.ReactionInfoMap
	}
	return nil
}

var File_GCGSkillPreviewInfo_proto protoreflect.FileDescriptor

var file_GCGSkillPreviewInfo_proto_rawDesc = []byte{
	0x0a, 0x19, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x47, 0x43, 0x47,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x6e, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x47, 0x43, 0x47, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x47, 0x43, 0x47, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xec, 0x06, 0x0a, 0x13, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x64, 0x0a, 0x1d, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x4f, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x1a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5f, 0x0a,
	0x15, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x47,
	0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x63, 0x61, 0x72, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x38,
	0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0b, 0x4f, 0x4a, 0x44, 0x4c,
	0x4d, 0x4a, 0x43, 0x45, 0x41, 0x49, 0x4b, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x4f, 0x4a, 0x44, 0x4c, 0x4d, 0x4a, 0x43,
	0x45, 0x41, 0x49, 0x4b, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12,
	0x3a, 0x0a, 0x0b, 0x4d, 0x41, 0x4b, 0x43, 0x43, 0x43, 0x46, 0x50, 0x44, 0x4a, 0x45, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x4d, 0x41, 0x4b, 0x43, 0x43, 0x43, 0x46, 0x50, 0x44, 0x4a, 0x45, 0x12, 0x43, 0x0a, 0x0b, 0x68,
	0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x68, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70,
	0x12, 0x55, 0x0a, 0x11, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x47, 0x43,
	0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x1a, 0x66, 0x0a, 0x17, 0x43, 0x61, 0x72, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x54, 0x0a, 0x0e, 0x48, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x48, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x67, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x47, 0x43, 0x47, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06,
	0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GCGSkillPreviewInfo_proto_rawDescOnce sync.Once
	file_GCGSkillPreviewInfo_proto_rawDescData = file_GCGSkillPreviewInfo_proto_rawDesc
)

func file_GCGSkillPreviewInfo_proto_rawDescGZIP() []byte {
	file_GCGSkillPreviewInfo_proto_rawDescOnce.Do(func() {
		file_GCGSkillPreviewInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_GCGSkillPreviewInfo_proto_rawDescData)
	})
	return file_GCGSkillPreviewInfo_proto_rawDescData
}

var file_GCGSkillPreviewInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_GCGSkillPreviewInfo_proto_goTypes = []interface{}{
	(*GCGSkillPreviewInfo)(nil),              // 0: GCGSkillPreviewInfo
	nil,                                      // 1: GCGSkillPreviewInfo.CardTokenChangeMapEntry
	nil,                                      // 2: GCGSkillPreviewInfo.HpInfoMapEntry
	nil,                                      // 3: GCGSkillPreviewInfo.ReactionInfoMapEntry
	(*GCGSkillPreviewOnstageChangeInfo)(nil), // 4: GCGSkillPreviewOnstageChangeInfo
	(*GCGSkillPreviewExtraInfo)(nil),         // 5: GCGSkillPreviewExtraInfo
	(*GCGSkillPreviewCardInfo)(nil),          // 6: GCGSkillPreviewCardInfo
	(*GCGSkillPreviewTokenChangeInfo)(nil),   // 7: GCGSkillPreviewTokenChangeInfo
	(*GCGSkillPreviewHpInfo)(nil),            // 8: GCGSkillPreviewHpInfo
	(*GCGSkillPreviewElementReactionInfo)(nil), // 9: GCGSkillPreviewElementReactionInfo
}
var file_GCGSkillPreviewInfo_proto_depIdxs = []int32{
	4,  // 0: GCGSkillPreviewInfo.change_onstage_character_list:type_name -> GCGSkillPreviewOnstageChangeInfo
	1,  // 1: GCGSkillPreviewInfo.card_token_change_map:type_name -> GCGSkillPreviewInfo.CardTokenChangeMapEntry
	5,  // 2: GCGSkillPreviewInfo.extra_info:type_name -> GCGSkillPreviewExtraInfo
	6,  // 3: GCGSkillPreviewInfo.OJDLMJCEAIK:type_name -> GCGSkillPreviewCardInfo
	6,  // 4: GCGSkillPreviewInfo.MAKCCCFPDJE:type_name -> GCGSkillPreviewCardInfo
	2,  // 5: GCGSkillPreviewInfo.hp_info_map:type_name -> GCGSkillPreviewInfo.HpInfoMapEntry
	3,  // 6: GCGSkillPreviewInfo.reaction_info_map:type_name -> GCGSkillPreviewInfo.ReactionInfoMapEntry
	7,  // 7: GCGSkillPreviewInfo.CardTokenChangeMapEntry.value:type_name -> GCGSkillPreviewTokenChangeInfo
	8,  // 8: GCGSkillPreviewInfo.HpInfoMapEntry.value:type_name -> GCGSkillPreviewHpInfo
	9,  // 9: GCGSkillPreviewInfo.ReactionInfoMapEntry.value:type_name -> GCGSkillPreviewElementReactionInfo
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_GCGSkillPreviewInfo_proto_init() }
func file_GCGSkillPreviewInfo_proto_init() {
	if File_GCGSkillPreviewInfo_proto != nil {
		return
	}
	file_GCGSkillPreviewOnstageChangeInfo_proto_init()
	file_GCGSkillPreviewTokenChangeInfo_proto_init()
	file_GCGSkillPreviewExtraInfo_proto_init()
	file_GCGSkillPreviewCardInfo_proto_init()
	file_GCGSkillPreviewHpInfo_proto_init()
	file_GCGSkillPreviewElementReactionInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GCGSkillPreviewInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCGSkillPreviewInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GCGSkillPreviewInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GCGSkillPreviewInfo_proto_goTypes,
		DependencyIndexes: file_GCGSkillPreviewInfo_proto_depIdxs,
		MessageInfos:      file_GCGSkillPreviewInfo_proto_msgTypes,
	}.Build()
	File_GCGSkillPreviewInfo_proto = out.File
	file_GCGSkillPreviewInfo_proto_rawDesc = nil
	file_GCGSkillPreviewInfo_proto_goTypes = nil
	file_GCGSkillPreviewInfo_proto_depIdxs = nil
}
