// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.1
// source: GCGSettleNotify.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CmdId: 20008
// Obf: DPPGFGEPJLI
type GCGSettleNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsWin                   bool         `protobuf:"varint,5,opt,name=is_win,json=isWin,proto3" json:"is_win,omitempty"`
	CLFLBPJPBJB             uint32       `protobuf:"varint,4,opt,name=CLFLBPJPBJB,proto3" json:"CLFLBPJPBJB,omitempty"`
	JOENIKOCBAL             BEHIKOPKKHE  `protobuf:"varint,3,opt,name=JOENIKOCBAL,proto3,enum=BEHIKOPKKHE" json:"JOENIKOCBAL,omitempty"`
	AGEDBLBGONB             []uint32     `protobuf:"varint,2,rep,packed,name=AGEDBLBGONB,proto3" json:"AGEDBLBGONB,omitempty"`
	FinishedChallengeIdList []uint32     `protobuf:"varint,9,rep,packed,name=finished_challenge_id_list,json=finishedChallengeIdList,proto3" json:"finished_challenge_id_list,omitempty"`
	Reason                  GCGEndReason `protobuf:"varint,7,opt,name=reason,proto3,enum=GCGEndReason" json:"reason,omitempty"`
	WinControllerId         uint32       `protobuf:"varint,12,opt,name=win_controller_id,json=winControllerId,proto3" json:"win_controller_id,omitempty"`
	RewardItemList          []*ItemParam `protobuf:"bytes,10,rep,name=reward_item_list,json=rewardItemList,proto3" json:"reward_item_list,omitempty"`
	// Types that are assignable to BGJHFJJEOFJ:
	//
	//	*GCGSettleNotify_PveActivitySettle
	//	*GCGSettleNotify_ArenaSettle
	//	*GCGSettleNotify_PveInfiniteActivitySettle
	BGJHFJJEOFJ isGCGSettleNotify_BGJHFJJEOFJ `protobuf_oneof:"BGJHFJJEOFJ"`
}

func (x *GCGSettleNotify) Reset() {
	*x = GCGSettleNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GCGSettleNotify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCGSettleNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCGSettleNotify) ProtoMessage() {}

func (x *GCGSettleNotify) ProtoReflect() protoreflect.Message {
	mi := &file_GCGSettleNotify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCGSettleNotify.ProtoReflect.Descriptor instead.
func (*GCGSettleNotify) Descriptor() ([]byte, []int) {
	return file_GCGSettleNotify_proto_rawDescGZIP(), []int{0}
}

func (x *GCGSettleNotify) GetIsWin() bool {
	if x != nil {
		return x.IsWin
	}
	return false
}

func (x *GCGSettleNotify) GetCLFLBPJPBJB() uint32 {
	if x != nil {
		return x.CLFLBPJPBJB
	}
	return 0
}

func (x *GCGSettleNotify) GetJOENIKOCBAL() BEHIKOPKKHE {
	if x != nil {
		return x.JOENIKOCBAL
	}
	return BEHIKOPKKHE_BEHIKOPKKHE_GcgGameNone
}

func (x *GCGSettleNotify) GetAGEDBLBGONB() []uint32 {
	if x != nil {
		return x.AGEDBLBGONB
	}
	return nil
}

func (x *GCGSettleNotify) GetFinishedChallengeIdList() []uint32 {
	if x != nil {
		return x.FinishedChallengeIdList
	}
	return nil
}

func (x *GCGSettleNotify) GetReason() GCGEndReason {
	if x != nil {
		return x.Reason
	}
	return GCGEndReason_GCG_END_REASON_DEFAULT
}

func (x *GCGSettleNotify) GetWinControllerId() uint32 {
	if x != nil {
		return x.WinControllerId
	}
	return 0
}

func (x *GCGSettleNotify) GetRewardItemList() []*ItemParam {
	if x != nil {
		return x.RewardItemList
	}
	return nil
}

func (m *GCGSettleNotify) GetBGJHFJJEOFJ() isGCGSettleNotify_BGJHFJJEOFJ {
	if m != nil {
		return m.BGJHFJJEOFJ
	}
	return nil
}

func (x *GCGSettleNotify) GetPveActivitySettle() *PveActivitySettle {
	if x, ok := x.GetBGJHFJJEOFJ().(*GCGSettleNotify_PveActivitySettle); ok {
		return x.PveActivitySettle
	}
	return nil
}

func (x *GCGSettleNotify) GetArenaSettle() *ArenaSettle {
	if x, ok := x.GetBGJHFJJEOFJ().(*GCGSettleNotify_ArenaSettle); ok {
		return x.ArenaSettle
	}
	return nil
}

func (x *GCGSettleNotify) GetPveInfiniteActivitySettle() *PveInfiniteActivitySettle {
	if x, ok := x.GetBGJHFJJEOFJ().(*GCGSettleNotify_PveInfiniteActivitySettle); ok {
		return x.PveInfiniteActivitySettle
	}
	return nil
}

type isGCGSettleNotify_BGJHFJJEOFJ interface {
	isGCGSettleNotify_BGJHFJJEOFJ()
}

type GCGSettleNotify_PveActivitySettle struct {
	PveActivitySettle *PveActivitySettle `protobuf:"bytes,1224,opt,name=pve_activity_settle,json=pveActivitySettle,proto3,oneof"`
}

type GCGSettleNotify_ArenaSettle struct {
	ArenaSettle *ArenaSettle `protobuf:"bytes,1787,opt,name=arena_settle,json=arenaSettle,proto3,oneof"`
}

type GCGSettleNotify_PveInfiniteActivitySettle struct {
	PveInfiniteActivitySettle *PveInfiniteActivitySettle `protobuf:"bytes,113,opt,name=pve_infinite_activity_settle,json=pveInfiniteActivitySettle,proto3,oneof"`
}

func (*GCGSettleNotify_PveActivitySettle) isGCGSettleNotify_BGJHFJJEOFJ() {}

func (*GCGSettleNotify_ArenaSettle) isGCGSettleNotify_BGJHFJJEOFJ() {}

func (*GCGSettleNotify_PveInfiniteActivitySettle) isGCGSettleNotify_BGJHFJJEOFJ() {}

var File_GCGSettleNotify_proto protoreflect.FileDescriptor

var file_GCGSettleNotify_proto_rawDesc = []byte{
	0x0a, 0x15, 0x47, 0x43, 0x47, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x42, 0x45, 0x48, 0x49, 0x4b, 0x4f, 0x50,
	0x4b, 0x4b, 0x48, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x47, 0x43, 0x47, 0x45,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x50, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x50, 0x76, 0x65,
	0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x04, 0x0a,
	0x0f, 0x47, 0x43, 0x47, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x77, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x69, 0x73, 0x57, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x4c, 0x46, 0x4c, 0x42,
	0x50, 0x4a, 0x50, 0x42, 0x4a, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x43, 0x4c,
	0x46, 0x4c, 0x42, 0x50, 0x4a, 0x50, 0x42, 0x4a, 0x42, 0x12, 0x2e, 0x0a, 0x0b, 0x4a, 0x4f, 0x45,
	0x4e, 0x49, 0x4b, 0x4f, 0x43, 0x42, 0x41, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x42, 0x45, 0x48, 0x49, 0x4b, 0x4f, 0x50, 0x4b, 0x4b, 0x48, 0x45, 0x52, 0x0b, 0x4a, 0x4f,
	0x45, 0x4e, 0x49, 0x4b, 0x4f, 0x43, 0x42, 0x41, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x47, 0x45,
	0x44, 0x42, 0x4c, 0x42, 0x47, 0x4f, 0x4e, 0x42, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b,
	0x41, 0x47, 0x45, 0x44, 0x42, 0x4c, 0x42, 0x47, 0x4f, 0x4e, 0x42, 0x12, 0x3b, 0x0a, 0x1a, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x17, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x47, 0x43, 0x47, 0x45, 0x6e,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x11, 0x77, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x77, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x10, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x45, 0x0a, 0x13, 0x70, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x18, 0xc8, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x50, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x11, 0x70, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0c, 0x61, 0x72, 0x65, 0x6e,
	0x61, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x18, 0xfb, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x0b, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x5d, 0x0a, 0x1c,
	0x70, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x71, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x19, 0x70, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x42,
	0x47, 0x4a, 0x48, 0x46, 0x4a, 0x4a, 0x45, 0x4f, 0x46, 0x4a, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x67,
	0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GCGSettleNotify_proto_rawDescOnce sync.Once
	file_GCGSettleNotify_proto_rawDescData = file_GCGSettleNotify_proto_rawDesc
)

func file_GCGSettleNotify_proto_rawDescGZIP() []byte {
	file_GCGSettleNotify_proto_rawDescOnce.Do(func() {
		file_GCGSettleNotify_proto_rawDescData = protoimpl.X.CompressGZIP(file_GCGSettleNotify_proto_rawDescData)
	})
	return file_GCGSettleNotify_proto_rawDescData
}

var file_GCGSettleNotify_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_GCGSettleNotify_proto_goTypes = []interface{}{
	(*GCGSettleNotify)(nil),           // 0: GCGSettleNotify
	(BEHIKOPKKHE)(0),                  // 1: BEHIKOPKKHE
	(GCGEndReason)(0),                 // 2: GCGEndReason
	(*ItemParam)(nil),                 // 3: ItemParam
	(*PveActivitySettle)(nil),         // 4: PveActivitySettle
	(*ArenaSettle)(nil),               // 5: ArenaSettle
	(*PveInfiniteActivitySettle)(nil), // 6: PveInfiniteActivitySettle
}
var file_GCGSettleNotify_proto_depIdxs = []int32{
	1, // 0: GCGSettleNotify.JOENIKOCBAL:type_name -> BEHIKOPKKHE
	2, // 1: GCGSettleNotify.reason:type_name -> GCGEndReason
	3, // 2: GCGSettleNotify.reward_item_list:type_name -> ItemParam
	4, // 3: GCGSettleNotify.pve_activity_settle:type_name -> PveActivitySettle
	5, // 4: GCGSettleNotify.arena_settle:type_name -> ArenaSettle
	6, // 5: GCGSettleNotify.pve_infinite_activity_settle:type_name -> PveInfiniteActivitySettle
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_GCGSettleNotify_proto_init() }
func file_GCGSettleNotify_proto_init() {
	if File_GCGSettleNotify_proto != nil {
		return
	}
	file_BEHIKOPKKHE_proto_init()
	file_GCGEndReason_proto_init()
	file_ItemParam_proto_init()
	file_PveActivitySettle_proto_init()
	file_ArenaSettle_proto_init()
	file_PveInfiniteActivitySettle_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GCGSettleNotify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCGSettleNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_GCGSettleNotify_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GCGSettleNotify_PveActivitySettle)(nil),
		(*GCGSettleNotify_ArenaSettle)(nil),
		(*GCGSettleNotify_PveInfiniteActivitySettle)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GCGSettleNotify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GCGSettleNotify_proto_goTypes,
		DependencyIndexes: file_GCGSettleNotify_proto_depIdxs,
		MessageInfos:      file_GCGSettleNotify_proto_msgTypes,
	}.Build()
	File_GCGSettleNotify_proto = out.File
	file_GCGSettleNotify_proto_rawDesc = nil
	file_GCGSettleNotify_proto_goTypes = nil
	file_GCGSettleNotify_proto_depIdxs = nil
}
