// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.1
// source: DNLLNJDINJG.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DNLLNJDINJG int32

const (
	DNLLNJDINJG_DNLLNJDINJG_GcgActionNone                DNLLNJDINJG = 0
	DNLLNJDINJG_DNLLNJDINJG_GcgActionSpecialPhase        DNLLNJDINJG = 1
	DNLLNJDINJG_DNLLNJDINJG_GcgActionNextPhase           DNLLNJDINJG = 2
	DNLLNJDINJG_DNLLNJDINJG_GcgActionDraw                DNLLNJDINJG = 3
	DNLLNJDINJG_DNLLNJDINJG_GcgActionRedraw              DNLLNJDINJG = 4
	DNLLNJDINJG_DNLLNJDINJG_GcgActionSelectOnstage       DNLLNJDINJG = 5
	DNLLNJDINJG_DNLLNJDINJG_GcgActionRoll                DNLLNJDINJG = 6
	DNLLNJDINJG_DNLLNJDINJG_GcgActionReroll              DNLLNJDINJG = 7
	DNLLNJDINJG_DNLLNJDINJG_GcgActionAttack              DNLLNJDINJG = 8
	DNLLNJDINJG_DNLLNJDINJG_GcgActionPlayCard            DNLLNJDINJG = 9
	DNLLNJDINJG_DNLLNJDINJG_GcgActionPass                DNLLNJDINJG = 10
	DNLLNJDINJG_DNLLNJDINJG_GcgActionReboot              DNLLNJDINJG = 11
	DNLLNJDINJG_DNLLNJDINJG_GcgActionGameOver            DNLLNJDINJG = 12
	DNLLNJDINJG_DNLLNJDINJG_GcgActionTrigger             DNLLNJDINJG = 13
	DNLLNJDINJG_DNLLNJDINJG_GcgActionPhaseExit           DNLLNJDINJG = 14
	DNLLNJDINJG_DNLLNJDINJG_GcgActionCustom              DNLLNJDINJG = 15
	DNLLNJDINJG_DNLLNJDINJG_GcgActionNotifyCost          DNLLNJDINJG = 16
	DNLLNJDINJG_DNLLNJDINJG_GcgActionAfterOperation      DNLLNJDINJG = 17
	DNLLNJDINJG_DNLLNJDINJG_GcgActionUseSkill            DNLLNJDINJG = 18
	DNLLNJDINJG_DNLLNJDINJG_GcgActionNotifySkillPreview  DNLLNJDINJG = 19
	DNLLNJDINJG_DNLLNJDINJG_GcgActionPreviewAttack       DNLLNJDINJG = 20
	DNLLNJDINJG_DNLLNJDINJG_GcgActionPreviewAfterAttack  DNLLNJDINJG = 21
	DNLLNJDINJG_DNLLNJDINJG_GcgActionSendMessage         DNLLNJDINJG = 22
	DNLLNJDINJG_DNLLNJDINJG_GcgActionWaitingCharacter    DNLLNJDINJG = 23
	DNLLNJDINJG_DNLLNJDINJG_GcgActionTriggerSkill        DNLLNJDINJG = 24
	DNLLNJDINJG_DNLLNJDINJG_GcgActionBeforeNextOperation DNLLNJDINJG = 25
	DNLLNJDINJG_DNLLNJDINJG_GcgActionRemoveCharacterCard DNLLNJDINJG = 26
	DNLLNJDINJG_DNLLNJDINJG_GcgActionOnstageCheck        DNLLNJDINJG = 27
)

// Enum value maps for DNLLNJDINJG.
var (
	DNLLNJDINJG_name = map[int32]string{
		0:  "DNLLNJDINJG_GcgActionNone",
		1:  "DNLLNJDINJG_GcgActionSpecialPhase",
		2:  "DNLLNJDINJG_GcgActionNextPhase",
		3:  "DNLLNJDINJG_GcgActionDraw",
		4:  "DNLLNJDINJG_GcgActionRedraw",
		5:  "DNLLNJDINJG_GcgActionSelectOnstage",
		6:  "DNLLNJDINJG_GcgActionRoll",
		7:  "DNLLNJDINJG_GcgActionReroll",
		8:  "DNLLNJDINJG_GcgActionAttack",
		9:  "DNLLNJDINJG_GcgActionPlayCard",
		10: "DNLLNJDINJG_GcgActionPass",
		11: "DNLLNJDINJG_GcgActionReboot",
		12: "DNLLNJDINJG_GcgActionGameOver",
		13: "DNLLNJDINJG_GcgActionTrigger",
		14: "DNLLNJDINJG_GcgActionPhaseExit",
		15: "DNLLNJDINJG_GcgActionCustom",
		16: "DNLLNJDINJG_GcgActionNotifyCost",
		17: "DNLLNJDINJG_GcgActionAfterOperation",
		18: "DNLLNJDINJG_GcgActionUseSkill",
		19: "DNLLNJDINJG_GcgActionNotifySkillPreview",
		20: "DNLLNJDINJG_GcgActionPreviewAttack",
		21: "DNLLNJDINJG_GcgActionPreviewAfterAttack",
		22: "DNLLNJDINJG_GcgActionSendMessage",
		23: "DNLLNJDINJG_GcgActionWaitingCharacter",
		24: "DNLLNJDINJG_GcgActionTriggerSkill",
		25: "DNLLNJDINJG_GcgActionBeforeNextOperation",
		26: "DNLLNJDINJG_GcgActionRemoveCharacterCard",
		27: "DNLLNJDINJG_GcgActionOnstageCheck",
	}
	DNLLNJDINJG_value = map[string]int32{
		"DNLLNJDINJG_GcgActionNone":                0,
		"DNLLNJDINJG_GcgActionSpecialPhase":        1,
		"DNLLNJDINJG_GcgActionNextPhase":           2,
		"DNLLNJDINJG_GcgActionDraw":                3,
		"DNLLNJDINJG_GcgActionRedraw":              4,
		"DNLLNJDINJG_GcgActionSelectOnstage":       5,
		"DNLLNJDINJG_GcgActionRoll":                6,
		"DNLLNJDINJG_GcgActionReroll":              7,
		"DNLLNJDINJG_GcgActionAttack":              8,
		"DNLLNJDINJG_GcgActionPlayCard":            9,
		"DNLLNJDINJG_GcgActionPass":                10,
		"DNLLNJDINJG_GcgActionReboot":              11,
		"DNLLNJDINJG_GcgActionGameOver":            12,
		"DNLLNJDINJG_GcgActionTrigger":             13,
		"DNLLNJDINJG_GcgActionPhaseExit":           14,
		"DNLLNJDINJG_GcgActionCustom":              15,
		"DNLLNJDINJG_GcgActionNotifyCost":          16,
		"DNLLNJDINJG_GcgActionAfterOperation":      17,
		"DNLLNJDINJG_GcgActionUseSkill":            18,
		"DNLLNJDINJG_GcgActionNotifySkillPreview":  19,
		"DNLLNJDINJG_GcgActionPreviewAttack":       20,
		"DNLLNJDINJG_GcgActionPreviewAfterAttack":  21,
		"DNLLNJDINJG_GcgActionSendMessage":         22,
		"DNLLNJDINJG_GcgActionWaitingCharacter":    23,
		"DNLLNJDINJG_GcgActionTriggerSkill":        24,
		"DNLLNJDINJG_GcgActionBeforeNextOperation": 25,
		"DNLLNJDINJG_GcgActionRemoveCharacterCard": 26,
		"DNLLNJDINJG_GcgActionOnstageCheck":        27,
	}
)

func (x DNLLNJDINJG) Enum() *DNLLNJDINJG {
	p := new(DNLLNJDINJG)
	*p = x
	return p
}

func (x DNLLNJDINJG) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DNLLNJDINJG) Descriptor() protoreflect.EnumDescriptor {
	return file_DNLLNJDINJG_proto_enumTypes[0].Descriptor()
}

func (DNLLNJDINJG) Type() protoreflect.EnumType {
	return &file_DNLLNJDINJG_proto_enumTypes[0]
}

func (x DNLLNJDINJG) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DNLLNJDINJG.Descriptor instead.
func (DNLLNJDINJG) EnumDescriptor() ([]byte, []int) {
	return file_DNLLNJDINJG_proto_rawDescGZIP(), []int{0}
}

var File_DNLLNJDINJG_proto protoreflect.FileDescriptor

var file_DNLLNJDINJG_proto_rawDesc = []byte{
	0x0a, 0x11, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2a, 0x9b, 0x08, 0x0a, 0x0b, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49,
	0x4e, 0x4a, 0x47, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e,
	0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a,
	0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x50, 0x68, 0x61, 0x73, 0x65, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x4e, 0x4c,
	0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x10, 0x02, 0x12, 0x1d, 0x0a,
	0x19, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b,
	0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x72, 0x61, 0x77, 0x10, 0x04, 0x12, 0x26, 0x0a,
	0x22, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x6e, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44,
	0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x6c, 0x6c, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49,
	0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x72,
	0x6f, 0x6c, 0x6c, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44,
	0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x10, 0x08, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a,
	0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x79, 0x43, 0x61, 0x72, 0x64, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x4e, 0x4c,
	0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4e, 0x4c, 0x4c,
	0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x10, 0x0b, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4e, 0x4c,
	0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x10, 0x0c, 0x12, 0x20, 0x0a, 0x1c,
	0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x10, 0x0d, 0x12, 0x22,
	0x0a, 0x1e, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63,
	0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x45, 0x78, 0x69, 0x74,
	0x10, 0x0e, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a,
	0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x10, 0x0f, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e,
	0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x10, 0x10, 0x12, 0x27, 0x0a, 0x23, 0x44, 0x4e, 0x4c, 0x4c,
	0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x11, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47,
	0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x10, 0x12, 0x12, 0x2b, 0x0a, 0x27, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49,
	0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x10,
	0x13, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47,
	0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x10, 0x14, 0x12, 0x2b, 0x0a, 0x27, 0x44, 0x4e, 0x4c,
	0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x66, 0x74, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x10, 0x15, 0x12, 0x24, 0x0a, 0x20, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a,
	0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x16, 0x12, 0x29, 0x0a, 0x25,
	0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x10, 0x17, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x4e, 0x4c, 0x4c, 0x4e,
	0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x10, 0x18, 0x12, 0x2c,
	0x0a, 0x28, 0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63,
	0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x4e, 0x65, 0x78,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x19, 0x12, 0x2c, 0x0a, 0x28,
	0x44, 0x4e, 0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x10, 0x1a, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x4e,
	0x4c, 0x4c, 0x4e, 0x4a, 0x44, 0x49, 0x4e, 0x4a, 0x47, 0x5f, 0x47, 0x63, 0x67, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x10,
	0x1b, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_DNLLNJDINJG_proto_rawDescOnce sync.Once
	file_DNLLNJDINJG_proto_rawDescData = file_DNLLNJDINJG_proto_rawDesc
)

func file_DNLLNJDINJG_proto_rawDescGZIP() []byte {
	file_DNLLNJDINJG_proto_rawDescOnce.Do(func() {
		file_DNLLNJDINJG_proto_rawDescData = protoimpl.X.CompressGZIP(file_DNLLNJDINJG_proto_rawDescData)
	})
	return file_DNLLNJDINJG_proto_rawDescData
}

var file_DNLLNJDINJG_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_DNLLNJDINJG_proto_goTypes = []interface{}{
	(DNLLNJDINJG)(0), // 0: DNLLNJDINJG
}
var file_DNLLNJDINJG_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_DNLLNJDINJG_proto_init() }
func file_DNLLNJDINJG_proto_init() {
	if File_DNLLNJDINJG_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DNLLNJDINJG_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DNLLNJDINJG_proto_goTypes,
		DependencyIndexes: file_DNLLNJDINJG_proto_depIdxs,
		EnumInfos:         file_DNLLNJDINJG_proto_enumTypes,
	}.Build()
	File_DNLLNJDINJG_proto = out.File
	file_DNLLNJDINJG_proto_rawDesc = nil
	file_DNLLNJDINJG_proto_goTypes = nil
	file_DNLLNJDINJG_proto_depIdxs = nil
}
