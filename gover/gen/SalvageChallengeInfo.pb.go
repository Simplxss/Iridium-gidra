// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.1
// source: SalvageChallengeInfo.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Obf: PAGONIKGOBF
type SalvageChallengeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChallengeType uint32 `protobuf:"varint,12,opt,name=challenge_type,json=challengeType,proto3" json:"challenge_type,omitempty"`
	IsUnlock      bool   `protobuf:"varint,13,opt,name=is_unlock,json=isUnlock,proto3" json:"is_unlock,omitempty"`
	// Types that are assignable to ChallengeDetail:
	//
	//	*SalvageChallengeInfo_BundleInfo
	//	*SalvageChallengeInfo_ScoreChallengeInfo
	//	*SalvageChallengeInfo_BossChallengeId
	ChallengeDetail isSalvageChallengeInfo_ChallengeDetail `protobuf_oneof:"challenge_detail"`
}

func (x *SalvageChallengeInfo) Reset() {
	*x = SalvageChallengeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SalvageChallengeInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalvageChallengeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalvageChallengeInfo) ProtoMessage() {}

func (x *SalvageChallengeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SalvageChallengeInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalvageChallengeInfo.ProtoReflect.Descriptor instead.
func (*SalvageChallengeInfo) Descriptor() ([]byte, []int) {
	return file_SalvageChallengeInfo_proto_rawDescGZIP(), []int{0}
}

func (x *SalvageChallengeInfo) GetChallengeType() uint32 {
	if x != nil {
		return x.ChallengeType
	}
	return 0
}

func (x *SalvageChallengeInfo) GetIsUnlock() bool {
	if x != nil {
		return x.IsUnlock
	}
	return false
}

func (m *SalvageChallengeInfo) GetChallengeDetail() isSalvageChallengeInfo_ChallengeDetail {
	if m != nil {
		return m.ChallengeDetail
	}
	return nil
}

func (x *SalvageChallengeInfo) GetBundleInfo() *SalvageBundleChallengeInfo {
	if x, ok := x.GetChallengeDetail().(*SalvageChallengeInfo_BundleInfo); ok {
		return x.BundleInfo
	}
	return nil
}

func (x *SalvageChallengeInfo) GetScoreChallengeInfo() *SalvageScoreChallengeInfo {
	if x, ok := x.GetChallengeDetail().(*SalvageChallengeInfo_ScoreChallengeInfo); ok {
		return x.ScoreChallengeInfo
	}
	return nil
}

func (x *SalvageChallengeInfo) GetBossChallengeId() uint32 {
	if x, ok := x.GetChallengeDetail().(*SalvageChallengeInfo_BossChallengeId); ok {
		return x.BossChallengeId
	}
	return 0
}

type isSalvageChallengeInfo_ChallengeDetail interface {
	isSalvageChallengeInfo_ChallengeDetail()
}

type SalvageChallengeInfo_BundleInfo struct {
	BundleInfo *SalvageBundleChallengeInfo `protobuf:"bytes,14,opt,name=bundle_info,json=bundleInfo,proto3,oneof"`
}

type SalvageChallengeInfo_ScoreChallengeInfo struct {
	ScoreChallengeInfo *SalvageScoreChallengeInfo `protobuf:"bytes,5,opt,name=score_challenge_info,json=scoreChallengeInfo,proto3,oneof"`
}

type SalvageChallengeInfo_BossChallengeId struct {
	BossChallengeId uint32 `protobuf:"varint,10,opt,name=boss_challenge_id,json=bossChallengeId,proto3,oneof"`
}

func (*SalvageChallengeInfo_BundleInfo) isSalvageChallengeInfo_ChallengeDetail() {}

func (*SalvageChallengeInfo_ScoreChallengeInfo) isSalvageChallengeInfo_ChallengeDetail() {}

func (*SalvageChallengeInfo_BossChallengeId) isSalvageChallengeInfo_ChallengeDetail() {}

var File_SalvageChallengeInfo_proto protoreflect.FileDescriptor

var file_SalvageChallengeInfo_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x53, 0x61, 0x6c, 0x76, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x53, 0x61,
	0x6c, 0x76, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x53, 0x61, 0x6c, 0x76, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xac, 0x02, 0x0a, 0x14, 0x53, 0x61, 0x6c, 0x76, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3e, 0x0a, 0x0b,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x61, 0x6c, 0x76, 0x61, 0x67, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x14,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x61, 0x6c,
	0x76, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x11,
	0x62, 0x6f, 0x73, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0f, 0x62, 0x6f, 0x73, 0x73, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x06,
	0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_SalvageChallengeInfo_proto_rawDescOnce sync.Once
	file_SalvageChallengeInfo_proto_rawDescData = file_SalvageChallengeInfo_proto_rawDesc
)

func file_SalvageChallengeInfo_proto_rawDescGZIP() []byte {
	file_SalvageChallengeInfo_proto_rawDescOnce.Do(func() {
		file_SalvageChallengeInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_SalvageChallengeInfo_proto_rawDescData)
	})
	return file_SalvageChallengeInfo_proto_rawDescData
}

var file_SalvageChallengeInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_SalvageChallengeInfo_proto_goTypes = []interface{}{
	(*SalvageChallengeInfo)(nil),       // 0: SalvageChallengeInfo
	(*SalvageBundleChallengeInfo)(nil), // 1: SalvageBundleChallengeInfo
	(*SalvageScoreChallengeInfo)(nil),  // 2: SalvageScoreChallengeInfo
}
var file_SalvageChallengeInfo_proto_depIdxs = []int32{
	1, // 0: SalvageChallengeInfo.bundle_info:type_name -> SalvageBundleChallengeInfo
	2, // 1: SalvageChallengeInfo.score_challenge_info:type_name -> SalvageScoreChallengeInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_SalvageChallengeInfo_proto_init() }
func file_SalvageChallengeInfo_proto_init() {
	if File_SalvageChallengeInfo_proto != nil {
		return
	}
	file_SalvageBundleChallengeInfo_proto_init()
	file_SalvageScoreChallengeInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SalvageChallengeInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalvageChallengeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_SalvageChallengeInfo_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SalvageChallengeInfo_BundleInfo)(nil),
		(*SalvageChallengeInfo_ScoreChallengeInfo)(nil),
		(*SalvageChallengeInfo_BossChallengeId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SalvageChallengeInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SalvageChallengeInfo_proto_goTypes,
		DependencyIndexes: file_SalvageChallengeInfo_proto_depIdxs,
		MessageInfos:      file_SalvageChallengeInfo_proto_msgTypes,
	}.Build()
	File_SalvageChallengeInfo_proto = out.File
	file_SalvageChallengeInfo_proto_rawDesc = nil
	file_SalvageChallengeInfo_proto_goTypes = nil
	file_SalvageChallengeInfo_proto_depIdxs = nil
}
