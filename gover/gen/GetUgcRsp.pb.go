// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.1
// source: GetUgcRsp.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CmdId: 29873
// Obf: HNCKDNCKKFM
type GetUgcRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcRecordUsage RecordUsage        `protobuf:"varint,13,opt,name=ugc_record_usage,json=ugcRecordUsage,proto3,enum=RecordUsage" json:"ugc_record_usage,omitempty"`
	UgcGuid        uint64             `protobuf:"varint,6,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	Retcode        int32              `protobuf:"varint,9,opt,name=retcode,proto3" json:"retcode,omitempty"`
	UgcType        UgcType            `protobuf:"varint,14,opt,name=ugc_type,json=ugcType,proto3,enum=UgcType" json:"ugc_type,omitempty"`
	MusicRecord    *UgcMusicRecord    `protobuf:"bytes,10,opt,name=music_record,json=musicRecord,proto3,oneof" json:"music_record,omitempty"`
	MusicBriefInfo *UgcMusicBriefInfo `protobuf:"bytes,791,opt,name=music_brief_info,json=musicBriefInfo,proto3,oneof" json:"music_brief_info,omitempty"`
}

func (x *GetUgcRsp) Reset() {
	*x = GetUgcRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GetUgcRsp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUgcRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUgcRsp) ProtoMessage() {}

func (x *GetUgcRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GetUgcRsp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUgcRsp.ProtoReflect.Descriptor instead.
func (*GetUgcRsp) Descriptor() ([]byte, []int) {
	return file_GetUgcRsp_proto_rawDescGZIP(), []int{0}
}

func (x *GetUgcRsp) GetUgcRecordUsage() RecordUsage {
	if x != nil {
		return x.UgcRecordUsage
	}
	return RecordUsage_UGC_RECORD_USAGE_NONE
}

func (x *GetUgcRsp) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *GetUgcRsp) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetUgcRsp) GetUgcType() UgcType {
	if x != nil {
		return x.UgcType
	}
	return UgcType_UGC_TYPE_NONE
}

func (x *GetUgcRsp) GetMusicRecord() *UgcMusicRecord {
	if x != nil {
		return x.MusicRecord
	}
	return nil
}

func (x *GetUgcRsp) GetMusicBriefInfo() *UgcMusicBriefInfo {
	if x != nil {
		return x.MusicBriefInfo
	}
	return nil
}

var File_GetUgcRsp_proto protoreflect.FileDescriptor

var file_GetUgcRsp_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x52, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x55, 0x67, 0x63, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x55, 0x67, 0x63, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc0, 0x02, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x55, 0x67, 0x63, 0x52, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x10, 0x75, 0x67, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x75, 0x67, 0x63, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x67, 0x63, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x08, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x08, 0x2e, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x75, 0x67, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x55, 0x67, 0x63, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x10, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x97, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x67, 0x63, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x0e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GetUgcRsp_proto_rawDescOnce sync.Once
	file_GetUgcRsp_proto_rawDescData = file_GetUgcRsp_proto_rawDesc
)

func file_GetUgcRsp_proto_rawDescGZIP() []byte {
	file_GetUgcRsp_proto_rawDescOnce.Do(func() {
		file_GetUgcRsp_proto_rawDescData = protoimpl.X.CompressGZIP(file_GetUgcRsp_proto_rawDescData)
	})
	return file_GetUgcRsp_proto_rawDescData
}

var file_GetUgcRsp_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_GetUgcRsp_proto_goTypes = []interface{}{
	(*GetUgcRsp)(nil),         // 0: GetUgcRsp
	(RecordUsage)(0),          // 1: RecordUsage
	(UgcType)(0),              // 2: UgcType
	(*UgcMusicRecord)(nil),    // 3: UgcMusicRecord
	(*UgcMusicBriefInfo)(nil), // 4: UgcMusicBriefInfo
}
var file_GetUgcRsp_proto_depIdxs = []int32{
	1, // 0: GetUgcRsp.ugc_record_usage:type_name -> RecordUsage
	2, // 1: GetUgcRsp.ugc_type:type_name -> UgcType
	3, // 2: GetUgcRsp.music_record:type_name -> UgcMusicRecord
	4, // 3: GetUgcRsp.music_brief_info:type_name -> UgcMusicBriefInfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_GetUgcRsp_proto_init() }
func file_GetUgcRsp_proto_init() {
	if File_GetUgcRsp_proto != nil {
		return
	}
	file_RecordUsage_proto_init()
	file_UgcType_proto_init()
	file_UgcMusicRecord_proto_init()
	file_UgcMusicBriefInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GetUgcRsp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUgcRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_GetUgcRsp_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GetUgcRsp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GetUgcRsp_proto_goTypes,
		DependencyIndexes: file_GetUgcRsp_proto_depIdxs,
		MessageInfos:      file_GetUgcRsp_proto_msgTypes,
	}.Build()
	File_GetUgcRsp_proto = out.File
	file_GetUgcRsp_proto_rawDesc = nil
	file_GetUgcRsp_proto_goTypes = nil
	file_GetUgcRsp_proto_depIdxs = nil
}
