// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.1
// source: AllWidgetDataNotify.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CmdId: 2294
// Obf: PODFDFDOCGK
type AllWidgetDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OneoffGatherPointDetectorDataList []*OneoffGatherPointDetectorData `protobuf:"bytes,4,rep,name=oneoff_gather_point_detector_data_list,json=oneoffGatherPointDetectorDataList,proto3" json:"oneoff_gather_point_detector_data_list,omitempty"`
	ClientCollectorDataList           []*ClientCollectorData           `protobuf:"bytes,9,rep,name=client_collector_data_list,json=clientCollectorDataList,proto3" json:"client_collector_data_list,omitempty"`
	CMFPEOMAJLM                       uint32                           `protobuf:"varint,10,opt,name=CMFPEOMAJLM,proto3" json:"CMFPEOMAJLM,omitempty"`
	PEOHMDJKMKO                       []*WidgetCoolDownData            `protobuf:"bytes,8,rep,name=PEOHMDJKMKO,proto3" json:"PEOHMDJKMKO,omitempty"`
	AnchorPointList                   []*AnchorPointData               `protobuf:"bytes,15,rep,name=anchor_point_list,json=anchorPointList,proto3" json:"anchor_point_list,omitempty"`
	LunchBoxData                      *LunchBoxData                    `protobuf:"bytes,11,opt,name=lunch_box_data,json=lunchBoxData,proto3" json:"lunch_box_data,omitempty"`
	MCMDFPAFOIG                       []*WidgetCoolDownData            `protobuf:"bytes,14,rep,name=MCMDFPAFOIG,proto3" json:"MCMDFPAFOIG,omitempty"`
	ELIOJBDGIMJ                       *LANPHFCMEBN                     `protobuf:"bytes,12,opt,name=ELIOJBDGIMJ,proto3" json:"ELIOJBDGIMJ,omitempty"`
	SkyCrystalDetectorData            *SkyCrystalDetectorData          `protobuf:"bytes,1,opt,name=sky_crystal_detector_data,json=skyCrystalDetectorData,proto3" json:"sky_crystal_detector_data,omitempty"`
	EMPBLGKLCOA                       []uint32                         `protobuf:"varint,1790,rep,packed,name=EMPBLGKLCOA,proto3" json:"EMPBLGKLCOA,omitempty"`
	NNPMMJCEJAO                       *EPIAFADAJAN                     `protobuf:"bytes,1715,opt,name=NNPMMJCEJAO,proto3" json:"NNPMMJCEJAO,omitempty"`
	HALAOGOBMKJ                       uint32                           `protobuf:"varint,1816,opt,name=HALAOGOBMKJ,proto3" json:"HALAOGOBMKJ,omitempty"`
	SlotList                          []*WidgetSlotData                `protobuf:"bytes,13,rep,name=slot_list,json=slotList,proto3" json:"slot_list,omitempty"`
	BackgroundActiveWidgetList        []uint32                         `protobuf:"varint,6,rep,packed,name=background_active_widget_list,json=backgroundActiveWidgetList,proto3" json:"background_active_widget_list,omitempty"`
	WeatherWizardData                 *WeatherWizardData               `protobuf:"bytes,2,opt,name=weather_wizard_data,json=weatherWizardData,proto3" json:"weather_wizard_data,omitempty"`
}

func (x *AllWidgetDataNotify) Reset() {
	*x = AllWidgetDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AllWidgetDataNotify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllWidgetDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllWidgetDataNotify) ProtoMessage() {}

func (x *AllWidgetDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_AllWidgetDataNotify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllWidgetDataNotify.ProtoReflect.Descriptor instead.
func (*AllWidgetDataNotify) Descriptor() ([]byte, []int) {
	return file_AllWidgetDataNotify_proto_rawDescGZIP(), []int{0}
}

func (x *AllWidgetDataNotify) GetOneoffGatherPointDetectorDataList() []*OneoffGatherPointDetectorData {
	if x != nil {
		return x.OneoffGatherPointDetectorDataList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetClientCollectorDataList() []*ClientCollectorData {
	if x != nil {
		return x.ClientCollectorDataList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetCMFPEOMAJLM() uint32 {
	if x != nil {
		return x.CMFPEOMAJLM
	}
	return 0
}

func (x *AllWidgetDataNotify) GetPEOHMDJKMKO() []*WidgetCoolDownData {
	if x != nil {
		return x.PEOHMDJKMKO
	}
	return nil
}

func (x *AllWidgetDataNotify) GetAnchorPointList() []*AnchorPointData {
	if x != nil {
		return x.AnchorPointList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetLunchBoxData() *LunchBoxData {
	if x != nil {
		return x.LunchBoxData
	}
	return nil
}

func (x *AllWidgetDataNotify) GetMCMDFPAFOIG() []*WidgetCoolDownData {
	if x != nil {
		return x.MCMDFPAFOIG
	}
	return nil
}

func (x *AllWidgetDataNotify) GetELIOJBDGIMJ() *LANPHFCMEBN {
	if x != nil {
		return x.ELIOJBDGIMJ
	}
	return nil
}

func (x *AllWidgetDataNotify) GetSkyCrystalDetectorData() *SkyCrystalDetectorData {
	if x != nil {
		return x.SkyCrystalDetectorData
	}
	return nil
}

func (x *AllWidgetDataNotify) GetEMPBLGKLCOA() []uint32 {
	if x != nil {
		return x.EMPBLGKLCOA
	}
	return nil
}

func (x *AllWidgetDataNotify) GetNNPMMJCEJAO() *EPIAFADAJAN {
	if x != nil {
		return x.NNPMMJCEJAO
	}
	return nil
}

func (x *AllWidgetDataNotify) GetHALAOGOBMKJ() uint32 {
	if x != nil {
		return x.HALAOGOBMKJ
	}
	return 0
}

func (x *AllWidgetDataNotify) GetSlotList() []*WidgetSlotData {
	if x != nil {
		return x.SlotList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetBackgroundActiveWidgetList() []uint32 {
	if x != nil {
		return x.BackgroundActiveWidgetList
	}
	return nil
}

func (x *AllWidgetDataNotify) GetWeatherWizardData() *WeatherWizardData {
	if x != nil {
		return x.WeatherWizardData
	}
	return nil
}

var File_AllWidgetDataNotify_proto protoreflect.FileDescriptor

var file_AllWidgetDataNotify_proto_rawDesc = []byte{
	0x0a, 0x19, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x4f, 0x6e, 0x65,
	0x6f, 0x66, 0x66, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x4c, 0x75,
	0x6e, 0x63, 0x68, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x4c, 0x41, 0x4e, 0x50, 0x48, 0x46, 0x43, 0x4d, 0x45, 0x42, 0x4e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x53, 0x6b, 0x79, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x45, 0x50, 0x49, 0x41, 0x46, 0x41, 0x44, 0x41, 0x4a, 0x41, 0x4e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x57, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x07, 0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x71, 0x0a, 0x26, 0x6f,
	0x6e, 0x65, 0x6f, 0x66, 0x66, 0x5f, 0x67, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x6e,
	0x65, 0x6f, 0x66, 0x66, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x21, 0x6f, 0x6e, 0x65,
	0x6f, 0x66, 0x66, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x51,
	0x0a, 0x1a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x4d, 0x46, 0x50, 0x45, 0x4f, 0x4d, 0x41, 0x4a, 0x4c, 0x4d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x43, 0x4d, 0x46, 0x50, 0x45, 0x4f, 0x4d, 0x41,
	0x4a, 0x4c, 0x4d, 0x12, 0x35, 0x0a, 0x0b, 0x50, 0x45, 0x4f, 0x48, 0x4d, 0x44, 0x4a, 0x4b, 0x4d,
	0x4b, 0x4f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x50,
	0x45, 0x4f, 0x48, 0x4d, 0x44, 0x4a, 0x4b, 0x4d, 0x4b, 0x4f, 0x12, 0x3c, 0x0a, 0x11, 0x61, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0e, 0x6c, 0x75, 0x6e, 0x63,
	0x68, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0c, 0x6c, 0x75, 0x6e, 0x63, 0x68, 0x42, 0x6f, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a,
	0x0b, 0x4d, 0x43, 0x4d, 0x44, 0x46, 0x50, 0x41, 0x46, 0x4f, 0x49, 0x47, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6c, 0x44,
	0x6f, 0x77, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x4d, 0x43, 0x4d, 0x44, 0x46, 0x50, 0x41,
	0x46, 0x4f, 0x49, 0x47, 0x12, 0x2e, 0x0a, 0x0b, 0x45, 0x4c, 0x49, 0x4f, 0x4a, 0x42, 0x44, 0x47,
	0x49, 0x4d, 0x4a, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x41, 0x4e, 0x50,
	0x48, 0x46, 0x43, 0x4d, 0x45, 0x42, 0x4e, 0x52, 0x0b, 0x45, 0x4c, 0x49, 0x4f, 0x4a, 0x42, 0x44,
	0x47, 0x49, 0x4d, 0x4a, 0x12, 0x52, 0x0a, 0x19, 0x73, 0x6b, 0x79, 0x5f, 0x63, 0x72, 0x79, 0x73,
	0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x6b, 0x79, 0x43, 0x72, 0x79,
	0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x16, 0x73, 0x6b, 0x79, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0b, 0x45, 0x4d, 0x50, 0x42,
	0x4c, 0x47, 0x4b, 0x4c, 0x43, 0x4f, 0x41, 0x18, 0xfe, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b,
	0x45, 0x4d, 0x50, 0x42, 0x4c, 0x47, 0x4b, 0x4c, 0x43, 0x4f, 0x41, 0x12, 0x2f, 0x0a, 0x0b, 0x4e,
	0x4e, 0x50, 0x4d, 0x4d, 0x4a, 0x43, 0x45, 0x4a, 0x41, 0x4f, 0x18, 0xb3, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x50, 0x49, 0x41, 0x46, 0x41, 0x44, 0x41, 0x4a, 0x41, 0x4e, 0x52,
	0x0b, 0x4e, 0x4e, 0x50, 0x4d, 0x4d, 0x4a, 0x43, 0x45, 0x4a, 0x41, 0x4f, 0x12, 0x21, 0x0a, 0x0b,
	0x48, 0x41, 0x4c, 0x41, 0x4f, 0x47, 0x4f, 0x42, 0x4d, 0x4b, 0x4a, 0x18, 0x98, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x48, 0x41, 0x4c, 0x41, 0x4f, 0x47, 0x4f, 0x42, 0x4d, 0x4b, 0x4a, 0x12,
	0x2c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x1d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x1a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x42, 0x0a, 0x13, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x11, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_AllWidgetDataNotify_proto_rawDescOnce sync.Once
	file_AllWidgetDataNotify_proto_rawDescData = file_AllWidgetDataNotify_proto_rawDesc
)

func file_AllWidgetDataNotify_proto_rawDescGZIP() []byte {
	file_AllWidgetDataNotify_proto_rawDescOnce.Do(func() {
		file_AllWidgetDataNotify_proto_rawDescData = protoimpl.X.CompressGZIP(file_AllWidgetDataNotify_proto_rawDescData)
	})
	return file_AllWidgetDataNotify_proto_rawDescData
}

var file_AllWidgetDataNotify_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_AllWidgetDataNotify_proto_goTypes = []interface{}{
	(*AllWidgetDataNotify)(nil),           // 0: AllWidgetDataNotify
	(*OneoffGatherPointDetectorData)(nil), // 1: OneoffGatherPointDetectorData
	(*ClientCollectorData)(nil),           // 2: ClientCollectorData
	(*WidgetCoolDownData)(nil),            // 3: WidgetCoolDownData
	(*AnchorPointData)(nil),               // 4: AnchorPointData
	(*LunchBoxData)(nil),                  // 5: LunchBoxData
	(*LANPHFCMEBN)(nil),                   // 6: LANPHFCMEBN
	(*SkyCrystalDetectorData)(nil),        // 7: SkyCrystalDetectorData
	(*EPIAFADAJAN)(nil),                   // 8: EPIAFADAJAN
	(*WidgetSlotData)(nil),                // 9: WidgetSlotData
	(*WeatherWizardData)(nil),             // 10: WeatherWizardData
}
var file_AllWidgetDataNotify_proto_depIdxs = []int32{
	1,  // 0: AllWidgetDataNotify.oneoff_gather_point_detector_data_list:type_name -> OneoffGatherPointDetectorData
	2,  // 1: AllWidgetDataNotify.client_collector_data_list:type_name -> ClientCollectorData
	3,  // 2: AllWidgetDataNotify.PEOHMDJKMKO:type_name -> WidgetCoolDownData
	4,  // 3: AllWidgetDataNotify.anchor_point_list:type_name -> AnchorPointData
	5,  // 4: AllWidgetDataNotify.lunch_box_data:type_name -> LunchBoxData
	3,  // 5: AllWidgetDataNotify.MCMDFPAFOIG:type_name -> WidgetCoolDownData
	6,  // 6: AllWidgetDataNotify.ELIOJBDGIMJ:type_name -> LANPHFCMEBN
	7,  // 7: AllWidgetDataNotify.sky_crystal_detector_data:type_name -> SkyCrystalDetectorData
	8,  // 8: AllWidgetDataNotify.NNPMMJCEJAO:type_name -> EPIAFADAJAN
	9,  // 9: AllWidgetDataNotify.slot_list:type_name -> WidgetSlotData
	10, // 10: AllWidgetDataNotify.weather_wizard_data:type_name -> WeatherWizardData
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_AllWidgetDataNotify_proto_init() }
func file_AllWidgetDataNotify_proto_init() {
	if File_AllWidgetDataNotify_proto != nil {
		return
	}
	file_OneoffGatherPointDetectorData_proto_init()
	file_ClientCollectorData_proto_init()
	file_WidgetCoolDownData_proto_init()
	file_AnchorPointData_proto_init()
	file_LunchBoxData_proto_init()
	file_LANPHFCMEBN_proto_init()
	file_SkyCrystalDetectorData_proto_init()
	file_EPIAFADAJAN_proto_init()
	file_WidgetSlotData_proto_init()
	file_WeatherWizardData_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_AllWidgetDataNotify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllWidgetDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_AllWidgetDataNotify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_AllWidgetDataNotify_proto_goTypes,
		DependencyIndexes: file_AllWidgetDataNotify_proto_depIdxs,
		MessageInfos:      file_AllWidgetDataNotify_proto_msgTypes,
	}.Build()
	File_AllWidgetDataNotify_proto = out.File
	file_AllWidgetDataNotify_proto_rawDesc = nil
	file_AllWidgetDataNotify_proto_goTypes = nil
	file_AllWidgetDataNotify_proto_depIdxs = nil
}
