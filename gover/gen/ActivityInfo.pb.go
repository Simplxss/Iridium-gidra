// https://github.com/SlushinPS/beach-simulator
// Copyright (C) 2023 Slushy Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.1
// source: ActivityInfo.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Obf: AMADJGLDDCF
type ActivityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId               uint32                  `protobuf:"varint,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	DNMOEAFCDGC              []uint32                `protobuf:"varint,1736,rep,packed,name=DNMOEAFCDGC,proto3" json:"DNMOEAFCDGC,omitempty"`
	WatcherInfoList          []*ActivityWatcherInfo  `protobuf:"bytes,9,rep,name=watcher_info_list,json=watcherInfoList,proto3" json:"watcher_info_list,omitempty"`
	IsFinished               bool                    `protobuf:"varint,14,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
	LJLDCLMAMNL              []uint32                `protobuf:"varint,482,rep,packed,name=LJLDCLMAMNL,proto3" json:"LJLDCLMAMNL,omitempty"`
	PJJKJGALLGD              bool                    `protobuf:"varint,16,opt,name=PJJKJGALLGD,proto3" json:"PJJKJGALLGD,omitempty"`
	KPBFNEPJKEO              uint32                  `protobuf:"varint,1,opt,name=KPBFNEPJKEO,proto3" json:"KPBFNEPJKEO,omitempty"`
	ScheduleId               uint32                  `protobuf:"varint,5,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	ActivityCoinMap          map[uint32]uint32       `protobuf:"bytes,1562,rep,name=activity_coin_map,json=activityCoinMap,proto3" json:"activity_coin_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	DCPENBLPKHK              []uint32                `protobuf:"varint,12,rep,packed,name=DCPENBLPKHK,proto3" json:"DCPENBLPKHK,omitempty"`
	DKJDABCNGBP              bool                    `protobuf:"varint,13,opt,name=DKJDABCNGBP,proto3" json:"DKJDABCNGBP,omitempty"`
	BeginTime                uint32                  `protobuf:"varint,2,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	INGFNLLCDOL              uint32                  `protobuf:"varint,733,opt,name=INGFNLLCDOL,proto3" json:"INGFNLLCDOL,omitempty"`
	ENNDKMJIMHN              bool                    `protobuf:"varint,15,opt,name=ENNDKMJIMHN,proto3" json:"ENNDKMJIMHN,omitempty"`
	CurScore                 uint32                  `protobuf:"varint,1555,opt,name=cur_score,json=curScore,proto3" json:"cur_score,omitempty"`
	BKJNDLLNAML              bool                    `protobuf:"varint,1818,opt,name=BKJNDLLNAML,proto3" json:"BKJNDLLNAML,omitempty"`
	FirstDayStartTime        uint32                  `protobuf:"varint,978,opt,name=first_day_start_time,json=firstDayStartTime,proto3" json:"first_day_start_time,omitempty"`
	ABMOPKOIMPA              bool                    `protobuf:"varint,525,opt,name=ABMOPKOIMPA,proto3" json:"ABMOPKOIMPA,omitempty"`
	FGFGECAAKJM              uint32                  `protobuf:"varint,1703,opt,name=FGFGECAAKJM,proto3" json:"FGFGECAAKJM,omitempty"`
	GFEMIEBKKKL              bool                    `protobuf:"varint,1117,opt,name=GFEMIEBKKKL,proto3" json:"GFEMIEBKKKL,omitempty"`
	CEFIPNKPEKA              uint32                  `protobuf:"varint,621,opt,name=CEFIPNKPEKA,proto3" json:"CEFIPNKPEKA,omitempty"`
	EndTime                  uint32                  `protobuf:"varint,11,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	WishGiftNumMap           map[uint32]uint32       `protobuf:"bytes,924,rep,name=wish_gift_num_map,json=wishGiftNumMap,proto3" json:"wish_gift_num_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	PHCOMIFAIJD              []uint32                `protobuf:"varint,4,rep,packed,name=PHCOMIFAIJD,proto3" json:"PHCOMIFAIJD,omitempty"`
	ActivityPushTipsDataList []*ActivityPushTipsData `protobuf:"bytes,643,rep,name=activity_push_tips_data_list,json=activityPushTipsDataList,proto3" json:"activity_push_tips_data_list,omitempty"`
	// Types that are assignable to Detail:
	//
	//	*ActivityInfo_SamLampInfo
	//	*ActivityInfo_CrucibleInfo
	//	*ActivityInfo_SalesmanInfo
	//	*ActivityInfo_TrialAvatarInfo
	//	*ActivityInfo_DeliveryInfo
	//	*ActivityInfo_AsterInfo
	//	*ActivityInfo_FlightInfo
	//	*ActivityInfo_DragonSpineInfo
	//	*ActivityInfo_EffigyInfo
	//	*ActivityInfo_TreasureMapInfo
	//	*ActivityInfo_BlessingInfo
	//	*ActivityInfo_SeaLampInfo
	//	*ActivityInfo_ExpeditionInfo
	//	*ActivityInfo_ArenaChallengeInfo
	//	*ActivityInfo_FleurFairInfo
	//	*ActivityInfo_WaterSpiritInfo
	//	*ActivityInfo_ChallnelerSlabInfo
	//	*ActivityInfo_MistTrialActivityInfo
	//	*ActivityInfo_HideAndSeekInfo
	//	*ActivityInfo_FindHilichurlInfo
	//	*ActivityInfo_SummerTimeInfo
	//	*ActivityInfo_BuoyantCombatInfo
	//	*ActivityInfo_EchoShellInfo
	//	*ActivityInfo_BounceConjuringInfo
	//	*ActivityInfo_BlitzRushInfo
	//	*ActivityInfo_ChessInfo
	//	*ActivityInfo_SumoInfo
	//	*ActivityInfo_MoonfinTrialInfo
	//	*ActivityInfo_LunaRiteInfo
	//	*ActivityInfo_PlantFlowerInfo
	//	*ActivityInfo_MusicGameInfo
	//	*ActivityInfo_RoguelikeDungoenInfo
	//	*ActivityInfo_DigInfo
	//	*ActivityInfo_HachiInfo
	//	*ActivityInfo_WinterCampInfo
	//	*ActivityInfo_PotionInfo
	//	*ActivityInfo_TanukiTravelActivityInfo
	//	*ActivityInfo_LanternRiteActivityInfo
	//	*ActivityInfo_MichiaeMatsuriInfo
	//	*ActivityInfo_BartenderInfo
	//	*ActivityInfo_UgcInfo
	//	*ActivityInfo_CrystalLinkInfo
	//	*ActivityInfo_IrodoriInfo
	//	*ActivityInfo_PhotoInfo
	//	*ActivityInfo_SpiceInfo
	//	*ActivityInfo_GachaInfo
	//	*ActivityInfo_LuminanceStoneChallengeInfo
	//	*ActivityInfo_RogueDiaryInfo
	//	*ActivityInfo_SummerTimeV2Info
	//	*ActivityInfo_IslandPartyInfo
	//	*ActivityInfo_GearInfo
	//	*ActivityInfo_GravenInnocenceInfo
	//	*ActivityInfo_InstableSprayInfo
	//	*ActivityInfo_MuqadasPotionInfo
	//	*ActivityInfo_TreasureSeelieInfo
	//	*ActivityInfo_RockBoardExploreInfo
	//	*ActivityInfo_VintageInfo
	//	*ActivityInfo_WindFieldInfo
	//	*ActivityInfo_FungusFighterInfo
	//	*ActivityInfo_CharAmusementInfo
	//	*ActivityInfo_EffigyChallengeInfo
	//	*ActivityInfo_CoinCollectInfo
	//	*ActivityInfo_BrickBreakerInfo
	//	*ActivityInfo_DuelHeartInfo
	//	*ActivityInfo_SeaLampV3Info
	//	*ActivityInfo_TeamChainInfo
	//	*ActivityInfo_ElectroherculesBattleInfo
	//	*ActivityInfo_GcgFestivalInfo
	//	*ActivityInfo_FleurFairV2Info
	//	*ActivityInfo_FungusFighterV2Info
	//	*ActivityInfo_AkaFesInfo
	//	*ActivityInfo_SandwormCannonDetailInfo
	//	*ActivityInfo_SorushTrialInfo
	//	*ActivityInfo_JourneyInfo
	//	*ActivityInfo_EffigyChallengeV4Info
	//	*ActivityInfo_GcgPveInfo
	//	*ActivityInfo_UgcV2Info
	//	*ActivityInfo_PenumbraAdventureInfo
	//	*ActivityInfo_AnimalViewInfo
	//	*ActivityInfo_ActivityMultiCharacterInfo
	//	*ActivityInfo_GcgPveInfiniteInfo
	//	*ActivityInfo_ToyBattleInfo
	//	*ActivityInfo_PhotoUnderseaInfo
	//	*ActivityInfo_FontaineGatherInfo
	//	*ActivityInfo_GcgPvePuzzleInfo
	Detail isActivityInfo_Detail `protobuf_oneof:"detail"`
}

func (x *ActivityInfo) Reset() {
	*x = ActivityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityInfo) ProtoMessage() {}

func (x *ActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityInfo.ProtoReflect.Descriptor instead.
func (*ActivityInfo) Descriptor() ([]byte, []int) {
	return file_ActivityInfo_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityInfo) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityInfo) GetDNMOEAFCDGC() []uint32 {
	if x != nil {
		return x.DNMOEAFCDGC
	}
	return nil
}

func (x *ActivityInfo) GetWatcherInfoList() []*ActivityWatcherInfo {
	if x != nil {
		return x.WatcherInfoList
	}
	return nil
}

func (x *ActivityInfo) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *ActivityInfo) GetLJLDCLMAMNL() []uint32 {
	if x != nil {
		return x.LJLDCLMAMNL
	}
	return nil
}

func (x *ActivityInfo) GetPJJKJGALLGD() bool {
	if x != nil {
		return x.PJJKJGALLGD
	}
	return false
}

func (x *ActivityInfo) GetKPBFNEPJKEO() uint32 {
	if x != nil {
		return x.KPBFNEPJKEO
	}
	return 0
}

func (x *ActivityInfo) GetScheduleId() uint32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *ActivityInfo) GetActivityCoinMap() map[uint32]uint32 {
	if x != nil {
		return x.ActivityCoinMap
	}
	return nil
}

func (x *ActivityInfo) GetDCPENBLPKHK() []uint32 {
	if x != nil {
		return x.DCPENBLPKHK
	}
	return nil
}

func (x *ActivityInfo) GetDKJDABCNGBP() bool {
	if x != nil {
		return x.DKJDABCNGBP
	}
	return false
}

func (x *ActivityInfo) GetBeginTime() uint32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ActivityInfo) GetINGFNLLCDOL() uint32 {
	if x != nil {
		return x.INGFNLLCDOL
	}
	return 0
}

func (x *ActivityInfo) GetENNDKMJIMHN() bool {
	if x != nil {
		return x.ENNDKMJIMHN
	}
	return false
}

func (x *ActivityInfo) GetCurScore() uint32 {
	if x != nil {
		return x.CurScore
	}
	return 0
}

func (x *ActivityInfo) GetBKJNDLLNAML() bool {
	if x != nil {
		return x.BKJNDLLNAML
	}
	return false
}

func (x *ActivityInfo) GetFirstDayStartTime() uint32 {
	if x != nil {
		return x.FirstDayStartTime
	}
	return 0
}

func (x *ActivityInfo) GetABMOPKOIMPA() bool {
	if x != nil {
		return x.ABMOPKOIMPA
	}
	return false
}

func (x *ActivityInfo) GetFGFGECAAKJM() uint32 {
	if x != nil {
		return x.FGFGECAAKJM
	}
	return 0
}

func (x *ActivityInfo) GetGFEMIEBKKKL() bool {
	if x != nil {
		return x.GFEMIEBKKKL
	}
	return false
}

func (x *ActivityInfo) GetCEFIPNKPEKA() uint32 {
	if x != nil {
		return x.CEFIPNKPEKA
	}
	return 0
}

func (x *ActivityInfo) GetEndTime() uint32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ActivityInfo) GetWishGiftNumMap() map[uint32]uint32 {
	if x != nil {
		return x.WishGiftNumMap
	}
	return nil
}

func (x *ActivityInfo) GetPHCOMIFAIJD() []uint32 {
	if x != nil {
		return x.PHCOMIFAIJD
	}
	return nil
}

func (x *ActivityInfo) GetActivityPushTipsDataList() []*ActivityPushTipsData {
	if x != nil {
		return x.ActivityPushTipsDataList
	}
	return nil
}

func (m *ActivityInfo) GetDetail() isActivityInfo_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *ActivityInfo) GetSamLampInfo() *SeaLampActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SamLampInfo); ok {
		return x.SamLampInfo
	}
	return nil
}

func (x *ActivityInfo) GetCrucibleInfo() *CrucibleActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_CrucibleInfo); ok {
		return x.CrucibleInfo
	}
	return nil
}

func (x *ActivityInfo) GetSalesmanInfo() *SalesmanActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SalesmanInfo); ok {
		return x.SalesmanInfo
	}
	return nil
}

func (x *ActivityInfo) GetTrialAvatarInfo() *TrialAvatarActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_TrialAvatarInfo); ok {
		return x.TrialAvatarInfo
	}
	return nil
}

func (x *ActivityInfo) GetDeliveryInfo() *DeliveryActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_DeliveryInfo); ok {
		return x.DeliveryInfo
	}
	return nil
}

func (x *ActivityInfo) GetAsterInfo() *AsterActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_AsterInfo); ok {
		return x.AsterInfo
	}
	return nil
}

func (x *ActivityInfo) GetFlightInfo() *FlightActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_FlightInfo); ok {
		return x.FlightInfo
	}
	return nil
}

func (x *ActivityInfo) GetDragonSpineInfo() *DragonSpineActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_DragonSpineInfo); ok {
		return x.DragonSpineInfo
	}
	return nil
}

func (x *ActivityInfo) GetEffigyInfo() *EffigyActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_EffigyInfo); ok {
		return x.EffigyInfo
	}
	return nil
}

func (x *ActivityInfo) GetTreasureMapInfo() *TreasureMapActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_TreasureMapInfo); ok {
		return x.TreasureMapInfo
	}
	return nil
}

func (x *ActivityInfo) GetBlessingInfo() *BlessingActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_BlessingInfo); ok {
		return x.BlessingInfo
	}
	return nil
}

func (x *ActivityInfo) GetSeaLampInfo() *SeaLampActivityInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SeaLampInfo); ok {
		return x.SeaLampInfo
	}
	return nil
}

func (x *ActivityInfo) GetExpeditionInfo() *ExpeditionActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ExpeditionInfo); ok {
		return x.ExpeditionInfo
	}
	return nil
}

func (x *ActivityInfo) GetArenaChallengeInfo() *ArenaChallengeActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ArenaChallengeInfo); ok {
		return x.ArenaChallengeInfo
	}
	return nil
}

func (x *ActivityInfo) GetFleurFairInfo() *FleurFairActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_FleurFairInfo); ok {
		return x.FleurFairInfo
	}
	return nil
}

func (x *ActivityInfo) GetWaterSpiritInfo() *WaterSpiritActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_WaterSpiritInfo); ok {
		return x.WaterSpiritInfo
	}
	return nil
}

func (x *ActivityInfo) GetChallnelerSlabInfo() *ChannelerSlabActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ChallnelerSlabInfo); ok {
		return x.ChallnelerSlabInfo
	}
	return nil
}

func (x *ActivityInfo) GetMistTrialActivityInfo() *MistTrialActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_MistTrialActivityInfo); ok {
		return x.MistTrialActivityInfo
	}
	return nil
}

func (x *ActivityInfo) GetHideAndSeekInfo() *HideAndSeekActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_HideAndSeekInfo); ok {
		return x.HideAndSeekInfo
	}
	return nil
}

func (x *ActivityInfo) GetFindHilichurlInfo() *FindHilichurlDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_FindHilichurlInfo); ok {
		return x.FindHilichurlInfo
	}
	return nil
}

func (x *ActivityInfo) GetSummerTimeInfo() *SummerTimeDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SummerTimeInfo); ok {
		return x.SummerTimeInfo
	}
	return nil
}

func (x *ActivityInfo) GetBuoyantCombatInfo() *BuoyantCombatDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_BuoyantCombatInfo); ok {
		return x.BuoyantCombatInfo
	}
	return nil
}

func (x *ActivityInfo) GetEchoShellInfo() *EchoShellDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_EchoShellInfo); ok {
		return x.EchoShellInfo
	}
	return nil
}

func (x *ActivityInfo) GetBounceConjuringInfo() *BounceConjuringActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_BounceConjuringInfo); ok {
		return x.BounceConjuringInfo
	}
	return nil
}

func (x *ActivityInfo) GetBlitzRushInfo() *BlitzRushActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_BlitzRushInfo); ok {
		return x.BlitzRushInfo
	}
	return nil
}

func (x *ActivityInfo) GetChessInfo() *ChessActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ChessInfo); ok {
		return x.ChessInfo
	}
	return nil
}

func (x *ActivityInfo) GetSumoInfo() *SumoActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SumoInfo); ok {
		return x.SumoInfo
	}
	return nil
}

func (x *ActivityInfo) GetMoonfinTrialInfo() *MoonfinTrialActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_MoonfinTrialInfo); ok {
		return x.MoonfinTrialInfo
	}
	return nil
}

func (x *ActivityInfo) GetLunaRiteInfo() *LunaRiteDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_LunaRiteInfo); ok {
		return x.LunaRiteInfo
	}
	return nil
}

func (x *ActivityInfo) GetPlantFlowerInfo() *PlantFlowerActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_PlantFlowerInfo); ok {
		return x.PlantFlowerInfo
	}
	return nil
}

func (x *ActivityInfo) GetMusicGameInfo() *MusicGameActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_MusicGameInfo); ok {
		return x.MusicGameInfo
	}
	return nil
}

func (x *ActivityInfo) GetRoguelikeDungoenInfo() *RoguelikeDungeonActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_RoguelikeDungoenInfo); ok {
		return x.RoguelikeDungoenInfo
	}
	return nil
}

func (x *ActivityInfo) GetDigInfo() *DigActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_DigInfo); ok {
		return x.DigInfo
	}
	return nil
}

func (x *ActivityInfo) GetHachiInfo() *HachiActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_HachiInfo); ok {
		return x.HachiInfo
	}
	return nil
}

func (x *ActivityInfo) GetWinterCampInfo() *WinterCampActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_WinterCampInfo); ok {
		return x.WinterCampInfo
	}
	return nil
}

func (x *ActivityInfo) GetPotionInfo() *PotionActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_PotionInfo); ok {
		return x.PotionInfo
	}
	return nil
}

func (x *ActivityInfo) GetTanukiTravelActivityInfo() *TanukiTravelActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_TanukiTravelActivityInfo); ok {
		return x.TanukiTravelActivityInfo
	}
	return nil
}

func (x *ActivityInfo) GetLanternRiteActivityInfo() *LanternRiteActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_LanternRiteActivityInfo); ok {
		return x.LanternRiteActivityInfo
	}
	return nil
}

func (x *ActivityInfo) GetMichiaeMatsuriInfo() *MichiaeMatsuriActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_MichiaeMatsuriInfo); ok {
		return x.MichiaeMatsuriInfo
	}
	return nil
}

func (x *ActivityInfo) GetBartenderInfo() *BartenderActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_BartenderInfo); ok {
		return x.BartenderInfo
	}
	return nil
}

func (x *ActivityInfo) GetUgcInfo() *UgcActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_UgcInfo); ok {
		return x.UgcInfo
	}
	return nil
}

func (x *ActivityInfo) GetCrystalLinkInfo() *CrystalLinkActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_CrystalLinkInfo); ok {
		return x.CrystalLinkInfo
	}
	return nil
}

func (x *ActivityInfo) GetIrodoriInfo() *IrodoriActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_IrodoriInfo); ok {
		return x.IrodoriInfo
	}
	return nil
}

func (x *ActivityInfo) GetPhotoInfo() *PhotoActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_PhotoInfo); ok {
		return x.PhotoInfo
	}
	return nil
}

func (x *ActivityInfo) GetSpiceInfo() *SpiceActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SpiceInfo); ok {
		return x.SpiceInfo
	}
	return nil
}

func (x *ActivityInfo) GetGachaInfo() *GachaActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_GachaInfo); ok {
		return x.GachaInfo
	}
	return nil
}

func (x *ActivityInfo) GetLuminanceStoneChallengeInfo() *LuminanceStoneChallengeActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_LuminanceStoneChallengeInfo); ok {
		return x.LuminanceStoneChallengeInfo
	}
	return nil
}

func (x *ActivityInfo) GetRogueDiaryInfo() *RogueDiaryActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_RogueDiaryInfo); ok {
		return x.RogueDiaryInfo
	}
	return nil
}

func (x *ActivityInfo) GetSummerTimeV2Info() *SummerTimeV2DetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SummerTimeV2Info); ok {
		return x.SummerTimeV2Info
	}
	return nil
}

func (x *ActivityInfo) GetIslandPartyInfo() *IslandPartyDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_IslandPartyInfo); ok {
		return x.IslandPartyInfo
	}
	return nil
}

func (x *ActivityInfo) GetGearInfo() *GearActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_GearInfo); ok {
		return x.GearInfo
	}
	return nil
}

func (x *ActivityInfo) GetGravenInnocenceInfo() *GravenInnocenceDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_GravenInnocenceInfo); ok {
		return x.GravenInnocenceInfo
	}
	return nil
}

func (x *ActivityInfo) GetInstableSprayInfo() *InstableSprayDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_InstableSprayInfo); ok {
		return x.InstableSprayInfo
	}
	return nil
}

func (x *ActivityInfo) GetMuqadasPotionInfo() *MuqadasPotionActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_MuqadasPotionInfo); ok {
		return x.MuqadasPotionInfo
	}
	return nil
}

func (x *ActivityInfo) GetTreasureSeelieInfo() *TreasureSeelieActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_TreasureSeelieInfo); ok {
		return x.TreasureSeelieInfo
	}
	return nil
}

func (x *ActivityInfo) GetRockBoardExploreInfo() *RockBoardExploreDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_RockBoardExploreInfo); ok {
		return x.RockBoardExploreInfo
	}
	return nil
}

func (x *ActivityInfo) GetVintageInfo() *VintageActivityDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_VintageInfo); ok {
		return x.VintageInfo
	}
	return nil
}

func (x *ActivityInfo) GetWindFieldInfo() *WindFieldDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_WindFieldInfo); ok {
		return x.WindFieldInfo
	}
	return nil
}

func (x *ActivityInfo) GetFungusFighterInfo() *FungusFighterDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_FungusFighterInfo); ok {
		return x.FungusFighterInfo
	}
	return nil
}

func (x *ActivityInfo) GetCharAmusementInfo() *CharAmusementDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_CharAmusementInfo); ok {
		return x.CharAmusementInfo
	}
	return nil
}

func (x *ActivityInfo) GetEffigyChallengeInfo() *EffigyChallengeV2DetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_EffigyChallengeInfo); ok {
		return x.EffigyChallengeInfo
	}
	return nil
}

func (x *ActivityInfo) GetCoinCollectInfo() *CoinCollectDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_CoinCollectInfo); ok {
		return x.CoinCollectInfo
	}
	return nil
}

func (x *ActivityInfo) GetBrickBreakerInfo() *BrickBreakerDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_BrickBreakerInfo); ok {
		return x.BrickBreakerInfo
	}
	return nil
}

func (x *ActivityInfo) GetDuelHeartInfo() *DuelHeartDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_DuelHeartInfo); ok {
		return x.DuelHeartInfo
	}
	return nil
}

func (x *ActivityInfo) GetSeaLampV3Info() *SeaLampV3DetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SeaLampV3Info); ok {
		return x.SeaLampV3Info
	}
	return nil
}

func (x *ActivityInfo) GetTeamChainInfo() *TeamChainDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_TeamChainInfo); ok {
		return x.TeamChainInfo
	}
	return nil
}

func (x *ActivityInfo) GetElectroherculesBattleInfo() *ElectroherculesBattleDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ElectroherculesBattleInfo); ok {
		return x.ElectroherculesBattleInfo
	}
	return nil
}

func (x *ActivityInfo) GetGcgFestivalInfo() *GCGFestivalDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_GcgFestivalInfo); ok {
		return x.GcgFestivalInfo
	}
	return nil
}

func (x *ActivityInfo) GetFleurFairV2Info() *FleurFairV2DetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_FleurFairV2Info); ok {
		return x.FleurFairV2Info
	}
	return nil
}

func (x *ActivityInfo) GetFungusFighterV2Info() *FungusFighterV2DetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_FungusFighterV2Info); ok {
		return x.FungusFighterV2Info
	}
	return nil
}

func (x *ActivityInfo) GetAkaFesInfo() *AkaFesDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_AkaFesInfo); ok {
		return x.AkaFesInfo
	}
	return nil
}

func (x *ActivityInfo) GetSandwormCannonDetailInfo() *SandwormCannonDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SandwormCannonDetailInfo); ok {
		return x.SandwormCannonDetailInfo
	}
	return nil
}

func (x *ActivityInfo) GetSorushTrialInfo() *SorushTrialDetailInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_SorushTrialInfo); ok {
		return x.SorushTrialInfo
	}
	return nil
}

func (x *ActivityInfo) GetJourneyInfo() *JourneyInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_JourneyInfo); ok {
		return x.JourneyInfo
	}
	return nil
}

func (x *ActivityInfo) GetEffigyChallengeV4Info() *EffigyChallengeV4Info {
	if x, ok := x.GetDetail().(*ActivityInfo_EffigyChallengeV4Info); ok {
		return x.EffigyChallengeV4Info
	}
	return nil
}

func (x *ActivityInfo) GetGcgPveInfo() *GcgPveInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_GcgPveInfo); ok {
		return x.GcgPveInfo
	}
	return nil
}

func (x *ActivityInfo) GetUgcV2Info() *UgcV2Info {
	if x, ok := x.GetDetail().(*ActivityInfo_UgcV2Info); ok {
		return x.UgcV2Info
	}
	return nil
}

func (x *ActivityInfo) GetPenumbraAdventureInfo() *PenumbraAdventureInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_PenumbraAdventureInfo); ok {
		return x.PenumbraAdventureInfo
	}
	return nil
}

func (x *ActivityInfo) GetAnimalViewInfo() *AnimalViewInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_AnimalViewInfo); ok {
		return x.AnimalViewInfo
	}
	return nil
}

func (x *ActivityInfo) GetActivityMultiCharacterInfo() *ActivityMultiCharacterInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ActivityMultiCharacterInfo); ok {
		return x.ActivityMultiCharacterInfo
	}
	return nil
}

func (x *ActivityInfo) GetGcgPveInfiniteInfo() *GcgPveInfiniteInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_GcgPveInfiniteInfo); ok {
		return x.GcgPveInfiniteInfo
	}
	return nil
}

func (x *ActivityInfo) GetToyBattleInfo() *ToyBattleInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_ToyBattleInfo); ok {
		return x.ToyBattleInfo
	}
	return nil
}

func (x *ActivityInfo) GetPhotoUnderseaInfo() *PhotoUnderseaInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_PhotoUnderseaInfo); ok {
		return x.PhotoUnderseaInfo
	}
	return nil
}

func (x *ActivityInfo) GetFontaineGatherInfo() *FontaineGatherInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_FontaineGatherInfo); ok {
		return x.FontaineGatherInfo
	}
	return nil
}

func (x *ActivityInfo) GetGcgPvePuzzleInfo() *GcgPvePuzzleInfo {
	if x, ok := x.GetDetail().(*ActivityInfo_GcgPvePuzzleInfo); ok {
		return x.GcgPvePuzzleInfo
	}
	return nil
}

type isActivityInfo_Detail interface {
	isActivityInfo_Detail()
}

type ActivityInfo_SamLampInfo struct {
	SamLampInfo *SeaLampActivityDetailInfo `protobuf:"bytes,10,opt,name=sam_lamp_info,json=samLampInfo,proto3,oneof"`
}

type ActivityInfo_CrucibleInfo struct {
	CrucibleInfo *CrucibleActivityDetailInfo `protobuf:"bytes,7,opt,name=crucible_info,json=crucibleInfo,proto3,oneof"`
}

type ActivityInfo_SalesmanInfo struct {
	SalesmanInfo *SalesmanActivityDetailInfo `protobuf:"bytes,8,opt,name=salesman_info,json=salesmanInfo,proto3,oneof"`
}

type ActivityInfo_TrialAvatarInfo struct {
	TrialAvatarInfo *TrialAvatarActivityDetailInfo `protobuf:"bytes,6,opt,name=trial_avatar_info,json=trialAvatarInfo,proto3,oneof"`
}

type ActivityInfo_DeliveryInfo struct {
	DeliveryInfo *DeliveryActivityDetailInfo `protobuf:"bytes,1846,opt,name=delivery_info,json=deliveryInfo,proto3,oneof"`
}

type ActivityInfo_AsterInfo struct {
	AsterInfo *AsterActivityDetailInfo `protobuf:"bytes,260,opt,name=aster_info,json=asterInfo,proto3,oneof"`
}

type ActivityInfo_FlightInfo struct {
	FlightInfo *FlightActivityDetailInfo `protobuf:"bytes,826,opt,name=flight_info,json=flightInfo,proto3,oneof"`
}

type ActivityInfo_DragonSpineInfo struct {
	DragonSpineInfo *DragonSpineActivityDetailInfo `protobuf:"bytes,110,opt,name=dragon_spine_info,json=dragonSpineInfo,proto3,oneof"`
}

type ActivityInfo_EffigyInfo struct {
	EffigyInfo *EffigyActivityDetailInfo `protobuf:"bytes,1010,opt,name=effigy_info,json=effigyInfo,proto3,oneof"`
}

type ActivityInfo_TreasureMapInfo struct {
	TreasureMapInfo *TreasureMapActivityDetailInfo `protobuf:"bytes,1754,opt,name=treasure_map_info,json=treasureMapInfo,proto3,oneof"`
}

type ActivityInfo_BlessingInfo struct {
	BlessingInfo *BlessingActivityDetailInfo `protobuf:"bytes,331,opt,name=blessing_info,json=blessingInfo,proto3,oneof"`
}

type ActivityInfo_SeaLampInfo struct {
	SeaLampInfo *SeaLampActivityInfo `protobuf:"bytes,1114,opt,name=sea_lamp_info,json=seaLampInfo,proto3,oneof"`
}

type ActivityInfo_ExpeditionInfo struct {
	ExpeditionInfo *ExpeditionActivityDetailInfo `protobuf:"bytes,674,opt,name=expedition_info,json=expeditionInfo,proto3,oneof"`
}

type ActivityInfo_ArenaChallengeInfo struct {
	ArenaChallengeInfo *ArenaChallengeActivityDetailInfo `protobuf:"bytes,39,opt,name=arena_challenge_info,json=arenaChallengeInfo,proto3,oneof"`
}

type ActivityInfo_FleurFairInfo struct {
	FleurFairInfo *FleurFairActivityDetailInfo `protobuf:"bytes,293,opt,name=fleur_fair_info,json=fleurFairInfo,proto3,oneof"`
}

type ActivityInfo_WaterSpiritInfo struct {
	WaterSpiritInfo *WaterSpiritActivityDetailInfo `protobuf:"bytes,1997,opt,name=water_spirit_info,json=waterSpiritInfo,proto3,oneof"`
}

type ActivityInfo_ChallnelerSlabInfo struct {
	ChallnelerSlabInfo *ChannelerSlabActivityDetailInfo `protobuf:"bytes,1757,opt,name=challneler_slab_info,json=challnelerSlabInfo,proto3,oneof"`
}

type ActivityInfo_MistTrialActivityInfo struct {
	MistTrialActivityInfo *MistTrialActivityDetailInfo `protobuf:"bytes,1622,opt,name=mist_trial_activity_info,json=mistTrialActivityInfo,proto3,oneof"`
}

type ActivityInfo_HideAndSeekInfo struct {
	HideAndSeekInfo *HideAndSeekActivityDetailInfo `protobuf:"bytes,1747,opt,name=hide_and_seek_info,json=hideAndSeekInfo,proto3,oneof"`
}

type ActivityInfo_FindHilichurlInfo struct {
	FindHilichurlInfo *FindHilichurlDetailInfo `protobuf:"bytes,1284,opt,name=find_hilichurl_info,json=findHilichurlInfo,proto3,oneof"`
}

type ActivityInfo_SummerTimeInfo struct {
	SummerTimeInfo *SummerTimeDetailInfo `protobuf:"bytes,950,opt,name=summer_time_info,json=summerTimeInfo,proto3,oneof"`
}

type ActivityInfo_BuoyantCombatInfo struct {
	BuoyantCombatInfo *BuoyantCombatDetailInfo `protobuf:"bytes,519,opt,name=buoyant_combat_info,json=buoyantCombatInfo,proto3,oneof"`
}

type ActivityInfo_EchoShellInfo struct {
	EchoShellInfo *EchoShellDetailInfo `protobuf:"bytes,305,opt,name=echo_shell_info,json=echoShellInfo,proto3,oneof"`
}

type ActivityInfo_BounceConjuringInfo struct {
	BounceConjuringInfo *BounceConjuringActivityDetailInfo `protobuf:"bytes,1864,opt,name=bounce_conjuring_info,json=bounceConjuringInfo,proto3,oneof"`
}

type ActivityInfo_BlitzRushInfo struct {
	BlitzRushInfo *BlitzRushActivityDetailInfo `protobuf:"bytes,915,opt,name=blitz_rush_info,json=blitzRushInfo,proto3,oneof"`
}

type ActivityInfo_ChessInfo struct {
	ChessInfo *ChessActivityDetailInfo `protobuf:"bytes,1087,opt,name=chess_info,json=chessInfo,proto3,oneof"`
}

type ActivityInfo_SumoInfo struct {
	SumoInfo *SumoActivityDetailInfo `protobuf:"bytes,2008,opt,name=sumo_info,json=sumoInfo,proto3,oneof"`
}

type ActivityInfo_MoonfinTrialInfo struct {
	MoonfinTrialInfo *MoonfinTrialActivityDetailInfo `protobuf:"bytes,389,opt,name=moonfin_trial_info,json=moonfinTrialInfo,proto3,oneof"`
}

type ActivityInfo_LunaRiteInfo struct {
	LunaRiteInfo *LunaRiteDetailInfo `protobuf:"bytes,1971,opt,name=luna_rite_info,json=lunaRiteInfo,proto3,oneof"`
}

type ActivityInfo_PlantFlowerInfo struct {
	PlantFlowerInfo *PlantFlowerActivityDetailInfo `protobuf:"bytes,1854,opt,name=plant_flower_info,json=plantFlowerInfo,proto3,oneof"`
}

type ActivityInfo_MusicGameInfo struct {
	MusicGameInfo *MusicGameActivityDetailInfo `protobuf:"bytes,1847,opt,name=music_game_info,json=musicGameInfo,proto3,oneof"`
}

type ActivityInfo_RoguelikeDungoenInfo struct {
	RoguelikeDungoenInfo *RoguelikeDungeonActivityDetailInfo `protobuf:"bytes,1025,opt,name=roguelike_dungoen_info,json=roguelikeDungoenInfo,proto3,oneof"`
}

type ActivityInfo_DigInfo struct {
	DigInfo *DigActivityDetailInfo `protobuf:"bytes,1855,opt,name=dig_info,json=digInfo,proto3,oneof"`
}

type ActivityInfo_HachiInfo struct {
	HachiInfo *HachiActivityDetailInfo `protobuf:"bytes,1176,opt,name=hachi_info,json=hachiInfo,proto3,oneof"`
}

type ActivityInfo_WinterCampInfo struct {
	WinterCampInfo *WinterCampActivityDetailInfo `protobuf:"bytes,2014,opt,name=winter_camp_info,json=winterCampInfo,proto3,oneof"`
}

type ActivityInfo_PotionInfo struct {
	PotionInfo *PotionActivityDetailInfo `protobuf:"bytes,1485,opt,name=potion_info,json=potionInfo,proto3,oneof"`
}

type ActivityInfo_TanukiTravelActivityInfo struct {
	TanukiTravelActivityInfo *TanukiTravelActivityDetailInfo `protobuf:"bytes,944,opt,name=tanuki_travel_activity_info,json=tanukiTravelActivityInfo,proto3,oneof"`
}

type ActivityInfo_LanternRiteActivityInfo struct {
	LanternRiteActivityInfo *LanternRiteActivityDetailInfo `protobuf:"bytes,1980,opt,name=lantern_rite_activity_info,json=lanternRiteActivityInfo,proto3,oneof"`
}

type ActivityInfo_MichiaeMatsuriInfo struct {
	MichiaeMatsuriInfo *MichiaeMatsuriActivityDetailInfo `protobuf:"bytes,114,opt,name=michiae_matsuri_info,json=michiaeMatsuriInfo,proto3,oneof"`
}

type ActivityInfo_BartenderInfo struct {
	BartenderInfo *BartenderActivityDetailInfo `protobuf:"bytes,1441,opt,name=bartender_info,json=bartenderInfo,proto3,oneof"`
}

type ActivityInfo_UgcInfo struct {
	UgcInfo *UgcActivityDetailInfo `protobuf:"bytes,1795,opt,name=ugc_info,json=ugcInfo,proto3,oneof"`
}

type ActivityInfo_CrystalLinkInfo struct {
	CrystalLinkInfo *CrystalLinkActivityDetailInfo `protobuf:"bytes,1301,opt,name=crystal_link_info,json=crystalLinkInfo,proto3,oneof"`
}

type ActivityInfo_IrodoriInfo struct {
	IrodoriInfo *IrodoriActivityDetailInfo `protobuf:"bytes,54,opt,name=irodori_info,json=irodoriInfo,proto3,oneof"`
}

type ActivityInfo_PhotoInfo struct {
	PhotoInfo *PhotoActivityDetailInfo `protobuf:"bytes,1492,opt,name=photo_info,json=photoInfo,proto3,oneof"`
}

type ActivityInfo_SpiceInfo struct {
	SpiceInfo *SpiceActivityDetailInfo `protobuf:"bytes,446,opt,name=spice_info,json=spiceInfo,proto3,oneof"`
}

type ActivityInfo_GachaInfo struct {
	GachaInfo *GachaActivityDetailInfo `protobuf:"bytes,1192,opt,name=gacha_info,json=gachaInfo,proto3,oneof"`
}

type ActivityInfo_LuminanceStoneChallengeInfo struct {
	LuminanceStoneChallengeInfo *LuminanceStoneChallengeActivityDetailInfo `protobuf:"bytes,38,opt,name=luminance_stone_challenge_info,json=luminanceStoneChallengeInfo,proto3,oneof"`
}

type ActivityInfo_RogueDiaryInfo struct {
	RogueDiaryInfo *RogueDiaryActivityDetailInfo `protobuf:"bytes,427,opt,name=rogue_diary_info,json=rogueDiaryInfo,proto3,oneof"`
}

type ActivityInfo_SummerTimeV2Info struct {
	SummerTimeV2Info *SummerTimeV2DetailInfo `protobuf:"bytes,910,opt,name=summer_time_v2_info,json=summerTimeV2Info,proto3,oneof"`
}

type ActivityInfo_IslandPartyInfo struct {
	IslandPartyInfo *IslandPartyDetailInfo `protobuf:"bytes,1044,opt,name=island_party_info,json=islandPartyInfo,proto3,oneof"`
}

type ActivityInfo_GearInfo struct {
	GearInfo *GearActivityDetailInfo `protobuf:"bytes,1263,opt,name=gear_info,json=gearInfo,proto3,oneof"`
}

type ActivityInfo_GravenInnocenceInfo struct {
	GravenInnocenceInfo *GravenInnocenceDetailInfo `protobuf:"bytes,356,opt,name=graven_innocence_info,json=gravenInnocenceInfo,proto3,oneof"`
}

type ActivityInfo_InstableSprayInfo struct {
	InstableSprayInfo *InstableSprayDetailInfo `protobuf:"bytes,508,opt,name=instable_spray_info,json=instableSprayInfo,proto3,oneof"`
}

type ActivityInfo_MuqadasPotionInfo struct {
	MuqadasPotionInfo *MuqadasPotionActivityDetailInfo `protobuf:"bytes,1474,opt,name=muqadas_potion_info,json=muqadasPotionInfo,proto3,oneof"`
}

type ActivityInfo_TreasureSeelieInfo struct {
	TreasureSeelieInfo *TreasureSeelieActivityDetailInfo `protobuf:"bytes,1251,opt,name=treasure_seelie_info,json=treasureSeelieInfo,proto3,oneof"`
}

type ActivityInfo_RockBoardExploreInfo struct {
	RockBoardExploreInfo *RockBoardExploreDetailInfo `protobuf:"bytes,1028,opt,name=rock_board_explore_info,json=rockBoardExploreInfo,proto3,oneof"`
}

type ActivityInfo_VintageInfo struct {
	VintageInfo *VintageActivityDetailInfo `protobuf:"bytes,1465,opt,name=vintage_info,json=vintageInfo,proto3,oneof"`
}

type ActivityInfo_WindFieldInfo struct {
	WindFieldInfo *WindFieldDetailInfo `protobuf:"bytes,768,opt,name=wind_field_info,json=windFieldInfo,proto3,oneof"`
}

type ActivityInfo_FungusFighterInfo struct {
	FungusFighterInfo *FungusFighterDetailInfo `protobuf:"bytes,834,opt,name=fungus_fighter_info,json=fungusFighterInfo,proto3,oneof"`
}

type ActivityInfo_CharAmusementInfo struct {
	CharAmusementInfo *CharAmusementDetailInfo `protobuf:"bytes,1222,opt,name=char_amusement_info,json=charAmusementInfo,proto3,oneof"`
}

type ActivityInfo_EffigyChallengeInfo struct {
	EffigyChallengeInfo *EffigyChallengeV2DetailInfo `protobuf:"bytes,1275,opt,name=effigy_challenge_info,json=effigyChallengeInfo,proto3,oneof"`
}

type ActivityInfo_CoinCollectInfo struct {
	CoinCollectInfo *CoinCollectDetailInfo `protobuf:"bytes,839,opt,name=coin_collect_info,json=coinCollectInfo,proto3,oneof"`
}

type ActivityInfo_BrickBreakerInfo struct {
	BrickBreakerInfo *BrickBreakerDetailInfo `protobuf:"bytes,551,opt,name=brick_breaker_info,json=brickBreakerInfo,proto3,oneof"`
}

type ActivityInfo_DuelHeartInfo struct {
	DuelHeartInfo *DuelHeartDetailInfo `protobuf:"bytes,1670,opt,name=duel_heart_info,json=duelHeartInfo,proto3,oneof"`
}

type ActivityInfo_SeaLampV3Info struct {
	SeaLampV3Info *SeaLampV3DetailInfo `protobuf:"bytes,833,opt,name=sea_lamp_v3_info,json=seaLampV3Info,proto3,oneof"`
}

type ActivityInfo_TeamChainInfo struct {
	TeamChainInfo *TeamChainDetailInfo `protobuf:"bytes,1165,opt,name=team_chain_info,json=teamChainInfo,proto3,oneof"`
}

type ActivityInfo_ElectroherculesBattleInfo struct {
	ElectroherculesBattleInfo *ElectroherculesBattleDetailInfo `protobuf:"bytes,981,opt,name=electrohercules_battle_info,json=electroherculesBattleInfo,proto3,oneof"`
}

type ActivityInfo_GcgFestivalInfo struct {
	GcgFestivalInfo *GCGFestivalDetailInfo `protobuf:"bytes,1664,opt,name=gcg_festival_info,json=gcgFestivalInfo,proto3,oneof"`
}

type ActivityInfo_FleurFairV2Info struct {
	FleurFairV2Info *FleurFairV2DetailInfo `protobuf:"bytes,1982,opt,name=fleur_fair_v2_info,json=fleurFairV2Info,proto3,oneof"`
}

type ActivityInfo_FungusFighterV2Info struct {
	FungusFighterV2Info *FungusFighterV2DetailInfo `protobuf:"bytes,1541,opt,name=fungus_fighter_v2_info,json=fungusFighterV2Info,proto3,oneof"`
}

type ActivityInfo_AkaFesInfo struct {
	AkaFesInfo *AkaFesDetailInfo `protobuf:"bytes,1524,opt,name=aka_fes_info,json=akaFesInfo,proto3,oneof"`
}

type ActivityInfo_SandwormCannonDetailInfo struct {
	SandwormCannonDetailInfo *SandwormCannonDetailInfo `protobuf:"bytes,626,opt,name=sandworm_cannon_detail_info,json=sandwormCannonDetailInfo,proto3,oneof"`
}

type ActivityInfo_SorushTrialInfo struct {
	SorushTrialInfo *SorushTrialDetailInfo `protobuf:"bytes,1077,opt,name=sorush_trial_info,json=sorushTrialInfo,proto3,oneof"`
}

type ActivityInfo_JourneyInfo struct {
	JourneyInfo *JourneyInfo `protobuf:"bytes,1869,opt,name=journey_info,json=journeyInfo,proto3,oneof"`
}

type ActivityInfo_EffigyChallengeV4Info struct {
	EffigyChallengeV4Info *EffigyChallengeV4Info `protobuf:"bytes,1321,opt,name=effigy_challenge_v4_info,json=effigyChallengeV4Info,proto3,oneof"`
}

type ActivityInfo_GcgPveInfo struct {
	GcgPveInfo *GcgPveInfo `protobuf:"bytes,1304,opt,name=gcg_pve_info,json=gcgPveInfo,proto3,oneof"`
}

type ActivityInfo_UgcV2Info struct {
	UgcV2Info *UgcV2Info `protobuf:"bytes,991,opt,name=ugc_v2_info,json=ugcV2Info,proto3,oneof"`
}

type ActivityInfo_PenumbraAdventureInfo struct {
	PenumbraAdventureInfo *PenumbraAdventureInfo `protobuf:"bytes,306,opt,name=penumbra_adventure_info,json=penumbraAdventureInfo,proto3,oneof"`
}

type ActivityInfo_AnimalViewInfo struct {
	AnimalViewInfo *AnimalViewInfo `protobuf:"bytes,947,opt,name=animal_view_info,json=animalViewInfo,proto3,oneof"`
}

type ActivityInfo_ActivityMultiCharacterInfo struct {
	ActivityMultiCharacterInfo *ActivityMultiCharacterInfo `protobuf:"bytes,1213,opt,name=activity_multi_character_info,json=activityMultiCharacterInfo,proto3,oneof"`
}

type ActivityInfo_GcgPveInfiniteInfo struct {
	GcgPveInfiniteInfo *GcgPveInfiniteInfo `protobuf:"bytes,124,opt,name=gcg_pve_infinite_info,json=gcgPveInfiniteInfo,proto3,oneof"`
}

type ActivityInfo_ToyBattleInfo struct {
	ToyBattleInfo *ToyBattleInfo `protobuf:"bytes,62,opt,name=toy_battle_info,json=toyBattleInfo,proto3,oneof"`
}

type ActivityInfo_PhotoUnderseaInfo struct {
	PhotoUnderseaInfo *PhotoUnderseaInfo `protobuf:"bytes,226,opt,name=photo_undersea_info,json=photoUnderseaInfo,proto3,oneof"`
}

type ActivityInfo_FontaineGatherInfo struct {
	FontaineGatherInfo *FontaineGatherInfo `protobuf:"bytes,1035,opt,name=fontaine_gather_info,json=fontaineGatherInfo,proto3,oneof"`
}

type ActivityInfo_GcgPvePuzzleInfo struct {
	GcgPvePuzzleInfo *GcgPvePuzzleInfo `protobuf:"bytes,871,opt,name=gcg_pve_puzzle_info,json=gcgPvePuzzleInfo,proto3,oneof"`
}

func (*ActivityInfo_SamLampInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_CrucibleInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SalesmanInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_TrialAvatarInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_DeliveryInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_AsterInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_FlightInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_DragonSpineInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_EffigyInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_TreasureMapInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_BlessingInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SeaLampInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ExpeditionInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ArenaChallengeInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_FleurFairInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_WaterSpiritInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ChallnelerSlabInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_MistTrialActivityInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_HideAndSeekInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_FindHilichurlInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SummerTimeInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_BuoyantCombatInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_EchoShellInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_BounceConjuringInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_BlitzRushInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ChessInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SumoInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_MoonfinTrialInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_LunaRiteInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_PlantFlowerInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_MusicGameInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_RoguelikeDungoenInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_DigInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_HachiInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_WinterCampInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_PotionInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_TanukiTravelActivityInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_LanternRiteActivityInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_MichiaeMatsuriInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_BartenderInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_UgcInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_CrystalLinkInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_IrodoriInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_PhotoInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SpiceInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_GachaInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_LuminanceStoneChallengeInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_RogueDiaryInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SummerTimeV2Info) isActivityInfo_Detail() {}

func (*ActivityInfo_IslandPartyInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_GearInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_GravenInnocenceInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_InstableSprayInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_MuqadasPotionInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_TreasureSeelieInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_RockBoardExploreInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_VintageInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_WindFieldInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_FungusFighterInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_CharAmusementInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_EffigyChallengeInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_CoinCollectInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_BrickBreakerInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_DuelHeartInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SeaLampV3Info) isActivityInfo_Detail() {}

func (*ActivityInfo_TeamChainInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ElectroherculesBattleInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_GcgFestivalInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_FleurFairV2Info) isActivityInfo_Detail() {}

func (*ActivityInfo_FungusFighterV2Info) isActivityInfo_Detail() {}

func (*ActivityInfo_AkaFesInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SandwormCannonDetailInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_SorushTrialInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_JourneyInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_EffigyChallengeV4Info) isActivityInfo_Detail() {}

func (*ActivityInfo_GcgPveInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_UgcV2Info) isActivityInfo_Detail() {}

func (*ActivityInfo_PenumbraAdventureInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_AnimalViewInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ActivityMultiCharacterInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_GcgPveInfiniteInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_ToyBattleInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_PhotoUnderseaInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_FontaineGatherInfo) isActivityInfo_Detail() {}

func (*ActivityInfo_GcgPvePuzzleInfo) isActivityInfo_Detail() {}

var File_ActivityInfo_proto protoreflect.FileDescriptor

var file_ActivityInfo_proto_rawDesc = []byte{
	0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x75, 0x73, 0x68, 0x54, 0x69, 0x70,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x53, 0x65, 0x61,
	0x4c, 0x61, 0x6d, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x43, 0x72,
	0x75, 0x63, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x6d, 0x61, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x23, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x41, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x53, 0x70,
	0x69, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x45, 0x66, 0x66,
	0x69, 0x67, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x54, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x45,
	0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x26, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x46, 0x6c, 0x65, 0x75, 0x72,
	0x46, 0x61, 0x69, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x57, 0x61,
	0x74, 0x65, 0x72, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x25, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x62,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x4d, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x69, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x48, 0x69, 0x64,
	0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x46, 0x69, 0x6e, 0x64, 0x48, 0x69, 0x6c, 0x69, 0x63, 0x68, 0x75, 0x72, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x53, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x42, 0x75, 0x6f,
	0x79, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x45, 0x63, 0x68, 0x6f,
	0x53, 0x68, 0x65, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x42, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x6a, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x42, 0x6c, 0x69, 0x74, 0x7a, 0x52, 0x75, 0x73, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x43, 0x68, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x53, 0x75, 0x6d, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x4d, 0x6f, 0x6f, 0x6e, 0x66, 0x69, 0x6e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x4c, 0x75, 0x6e, 0x61, 0x52, 0x69, 0x74, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x6c, 0x69, 0x6b,
	0x65, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x44, 0x69, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x48,
	0x61, 0x63, 0x68, 0x69, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x57, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x50, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x54, 0x61, 0x6e, 0x75, 0x6b, 0x69, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x4c, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x52,
	0x69, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x4d, 0x69, 0x63,
	0x68, 0x69, 0x61, 0x65, 0x4d, 0x61, 0x74, 0x73, 0x75, 0x72, 0x69, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x42, 0x61, 0x72, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x55, 0x67, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x49, 0x72, 0x6f, 0x64, 0x6f, 0x72,
	0x69, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x53, 0x70, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x47, 0x61, 0x63, 0x68, 0x61, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x4c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x44, 0x69,
	0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x53, 0x75, 0x6d,
	0x6d, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x32, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x49, 0x73, 0x6c, 0x61, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x47, 0x65, 0x61, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x47, 0x72, 0x61, 0x76, 0x65, 0x6e, 0x49, 0x6e, 0x6e, 0x6f,
	0x63, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x70, 0x72, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x4d, 0x75, 0x71, 0x61, 0x64, 0x61, 0x73, 0x50, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x54, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x65, 0x6c, 0x69, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x52, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x78,
	0x70, 0x6c, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x56, 0x69, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x57, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x46, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x43, 0x68, 0x61, 0x72, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x21, 0x45, 0x66, 0x66, 0x69, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x56, 0x32, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x42, 0x72, 0x69, 0x63, 0x6b, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x44,
	0x75, 0x65, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d,
	0x70, 0x56, 0x33, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25,
	0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x65, 0x73, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x47, 0x43, 0x47, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76,
	0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x46, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72, 0x56, 0x32, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x46, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x56, 0x32,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x41, 0x6b, 0x61, 0x46, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x53, 0x61, 0x6e, 0x64, 0x77, 0x6f,
	0x72, 0x6d, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x53, 0x6f, 0x72, 0x75, 0x73, 0x68,
	0x54, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x45, 0x66, 0x66, 0x69, 0x67, 0x79,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x56, 0x34, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x47, 0x63, 0x67, 0x50, 0x76, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x55, 0x67, 0x63, 0x56, 0x32, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62,
	0x72, 0x61, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x56, 0x69, 0x65,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x47,
	0x63, 0x67, 0x50, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x54, 0x6f, 0x79, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x46, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x47,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x47, 0x63, 0x67, 0x50, 0x76, 0x65, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x3a, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x44, 0x4e, 0x4d,
	0x4f, 0x45, 0x41, 0x46, 0x43, 0x44, 0x47, 0x43, 0x18, 0xc8, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0b, 0x44, 0x4e, 0x4d, 0x4f, 0x45, 0x41, 0x46, 0x43, 0x44, 0x47, 0x43, 0x12, 0x40, 0x0a, 0x11,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0b, 0x4c, 0x4a, 0x4c, 0x44, 0x43, 0x4c, 0x4d, 0x41, 0x4d, 0x4e, 0x4c, 0x18, 0xe2,
	0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x4c, 0x4a, 0x4c, 0x44, 0x43, 0x4c, 0x4d, 0x41, 0x4d,
	0x4e, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x4a, 0x4a, 0x4b, 0x4a, 0x47, 0x41, 0x4c, 0x4c, 0x47,
	0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x4a, 0x4a, 0x4b, 0x4a, 0x47, 0x41,
	0x4c, 0x4c, 0x47, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4b, 0x50, 0x42, 0x46, 0x4e, 0x45, 0x50, 0x4a,
	0x4b, 0x45, 0x4f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4b, 0x50, 0x42, 0x46, 0x4e,
	0x45, 0x50, 0x4a, 0x4b, 0x45, 0x4f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x9a, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x43, 0x50, 0x45,
	0x4e, 0x42, 0x4c, 0x50, 0x4b, 0x48, 0x4b, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x44,
	0x43, 0x50, 0x45, 0x4e, 0x42, 0x4c, 0x50, 0x4b, 0x48, 0x4b, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x4b,
	0x4a, 0x44, 0x41, 0x42, 0x43, 0x4e, 0x47, 0x42, 0x50, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x44, 0x4b, 0x4a, 0x44, 0x41, 0x42, 0x43, 0x4e, 0x47, 0x42, 0x50, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x49,
	0x4e, 0x47, 0x46, 0x4e, 0x4c, 0x4c, 0x43, 0x44, 0x4f, 0x4c, 0x18, 0xdd, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x49, 0x4e, 0x47, 0x46, 0x4e, 0x4c, 0x4c, 0x43, 0x44, 0x4f, 0x4c, 0x12, 0x20,
	0x0a, 0x0b, 0x45, 0x4e, 0x4e, 0x44, 0x4b, 0x4d, 0x4a, 0x49, 0x4d, 0x48, 0x4e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x45, 0x4e, 0x4e, 0x44, 0x4b, 0x4d, 0x4a, 0x49, 0x4d, 0x48, 0x4e,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x93, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x21,
	0x0a, 0x0b, 0x42, 0x4b, 0x4a, 0x4e, 0x44, 0x4c, 0x4c, 0x4e, 0x41, 0x4d, 0x4c, 0x18, 0x9a, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x42, 0x4b, 0x4a, 0x4e, 0x44, 0x4c, 0x4c, 0x4e, 0x41, 0x4d,
	0x4c, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xd2, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x41, 0x42, 0x4d, 0x4f, 0x50, 0x4b, 0x4f, 0x49, 0x4d,
	0x50, 0x41, 0x18, 0x8d, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x41, 0x42, 0x4d, 0x4f, 0x50,
	0x4b, 0x4f, 0x49, 0x4d, 0x50, 0x41, 0x12, 0x21, 0x0a, 0x0b, 0x46, 0x47, 0x46, 0x47, 0x45, 0x43,
	0x41, 0x41, 0x4b, 0x4a, 0x4d, 0x18, 0xa7, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x46, 0x47,
	0x46, 0x47, 0x45, 0x43, 0x41, 0x41, 0x4b, 0x4a, 0x4d, 0x12, 0x21, 0x0a, 0x0b, 0x47, 0x46, 0x45,
	0x4d, 0x49, 0x45, 0x42, 0x4b, 0x4b, 0x4b, 0x4c, 0x18, 0xdd, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x47, 0x46, 0x45, 0x4d, 0x49, 0x45, 0x42, 0x4b, 0x4b, 0x4b, 0x4c, 0x12, 0x21, 0x0a, 0x0b,
	0x43, 0x45, 0x46, 0x49, 0x50, 0x4e, 0x4b, 0x50, 0x45, 0x4b, 0x41, 0x18, 0xed, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x43, 0x45, 0x46, 0x49, 0x50, 0x4e, 0x4b, 0x50, 0x45, 0x4b, 0x41, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x77, 0x69,
	0x73, 0x68, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x9c, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x75,
	0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x77, 0x69, 0x73, 0x68, 0x47,
	0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x4d, 0x61, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x48, 0x43,
	0x4f, 0x4d, 0x49, 0x46, 0x41, 0x49, 0x4a, 0x44, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b,
	0x50, 0x48, 0x43, 0x4f, 0x4d, 0x49, 0x46, 0x41, 0x49, 0x4a, 0x44, 0x12, 0x56, 0x0a, 0x1c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x70,
	0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x83, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x75, 0x73,
	0x68, 0x54, 0x69, 0x70, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x18, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x50, 0x75, 0x73, 0x68, 0x54, 0x69, 0x70, 0x73, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x5f, 0x6c, 0x61, 0x6d, 0x70, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x65, 0x61,
	0x4c, 0x61, 0x6d, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x61, 0x6d, 0x4c, 0x61, 0x6d,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x72, 0x75, 0x63, 0x69, 0x62, 0x6c,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43,
	0x72, 0x75, 0x63, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x75,
	0x63, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x0d, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x6d, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x6d, 0x61, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x6d, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a,
	0x11, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x54, 0x72, 0x69, 0x61, 0x6c,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x61,
	0x6c, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb6, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x84,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x09, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0b,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xba, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x0a, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x11, 0x64,
	0x72, 0x61, 0x67, 0x6f, 0x6e, 0x5f, 0x73, 0x70, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x53,
	0x70, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x72, 0x61, 0x67, 0x6f, 0x6e,
	0x53, 0x70, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x66, 0x66,
	0x69, 0x67, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x45, 0x66, 0x66, 0x69, 0x67, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x66,
	0x66, 0x69, 0x67, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x11, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xda, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4d,
	0x61, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x0d, 0x62, 0x6c, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xcb, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0c,
	0x62, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0d,
	0x73, 0x65, 0x61, 0x5f, 0x6c, 0x61, 0x6d, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xda, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65,
	0x61, 0x4c, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x0f, 0x65, 0x78, 0x70,
	0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xa2, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a, 0x14, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x5f, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12, 0x61, 0x72, 0x65, 0x6e, 0x61, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0f, 0x66,
	0x6c, 0x65, 0x75, 0x72, 0x5f, 0x66, 0x61, 0x69, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xa5,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x46, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x11, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x70,
	0x69, 0x72, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xcd, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x57, 0x61, 0x74, 0x65, 0x72, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x0f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x6e, 0x65, 0x6c, 0x65,
	0x72, 0x5f, 0x73, 0x6c, 0x61, 0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xdd, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x65, 0x72, 0x53, 0x6c,
	0x61, 0x62, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x6e, 0x65, 0x6c,
	0x65, 0x72, 0x53, 0x6c, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x18, 0x6d, 0x69,
	0x73, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xd6, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x4d, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x15, 0x6d,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x61, 0x6e, 0x64,
	0x5f, 0x73, 0x65, 0x65, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xd3, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x48, 0x69, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0f, 0x68, 0x69, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x68, 0x69, 0x6c,
	0x69, 0x63, 0x68, 0x75, 0x72, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x84, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x48, 0x69, 0x6c, 0x69, 0x63, 0x68, 0x75,
	0x72, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11,
	0x66, 0x69, 0x6e, 0x64, 0x48, 0x69, 0x6c, 0x69, 0x63, 0x68, 0x75, 0x72, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x42, 0x0a, 0x10, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb6, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53,
	0x75, 0x6d, 0x6d, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x13, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x87, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x42, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x62, 0x61, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x11, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0f, 0x65, 0x63, 0x68, 0x6f, 0x5f, 0x73, 0x68, 0x65, 0x6c, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb1, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x45,
	0x63, 0x68, 0x6f, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x63, 0x68, 0x6f, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x59, 0x0a, 0x15, 0x62, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x6a, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xc8, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6a,
	0x75, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x13, 0x62, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x6a, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47,
	0x0a, 0x0f, 0x62, 0x6c, 0x69, 0x74, 0x7a, 0x5f, 0x72, 0x75, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x93, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x42, 0x6c, 0x69, 0x74, 0x7a,
	0x52, 0x75, 0x73, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x6c, 0x69, 0x74, 0x7a, 0x52,
	0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xbf, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43,
	0x68, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0xd8, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x75, 0x6d, 0x6f, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x08, 0x73, 0x75, 0x6d, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x50, 0x0a, 0x12,
	0x6d, 0x6f, 0x6f, 0x6e, 0x66, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x85, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4d, 0x6f, 0x6f, 0x6e,
	0x66, 0x69, 0x6e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x6f,
	0x6f, 0x6e, 0x66, 0x69, 0x6e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c,
	0x0a, 0x0e, 0x6c, 0x75, 0x6e, 0x61, 0x5f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0xb3, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4c, 0x75, 0x6e, 0x61, 0x52, 0x69,
	0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0c,
	0x6c, 0x75, 0x6e, 0x61, 0x52, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x11,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0xbe, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0f, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb7,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5c, 0x0a, 0x16, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x6c, 0x69, 0x6b,
	0x65, 0x5f, 0x64, 0x75, 0x6e, 0x67, 0x6f, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x81,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x6c, 0x69, 0x6b,
	0x65, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x14, 0x72, 0x6f,
	0x67, 0x75, 0x65, 0x6c, 0x69, 0x6b, 0x65, 0x44, 0x75, 0x6e, 0x67, 0x6f, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x34, 0x0a, 0x08, 0x64, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xbf,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x69, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x07, 0x64, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0a, 0x68, 0x61, 0x63, 0x68,
	0x69, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x98, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x48, 0x61, 0x63, 0x68, 0x69, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61, 0x63, 0x68, 0x69,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4a, 0x0a, 0x10, 0x77, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x63,
	0x61, 0x6d, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xde, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x57, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x0e, 0x77, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0xcd, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x61, 0x0a, 0x1b, 0x74, 0x61, 0x6e, 0x75, 0x6b, 0x69, 0x5f, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb0,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x54, 0x61, 0x6e, 0x75, 0x6b, 0x69, 0x54, 0x72,
	0x61, 0x76, 0x65, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x18, 0x74, 0x61, 0x6e, 0x75, 0x6b, 0x69,
	0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x5e, 0x0a, 0x1a, 0x6c, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x5f, 0x72, 0x69,
	0x74, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0xbc, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4c, 0x61, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x52, 0x69, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x17, 0x6c, 0x61, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x52, 0x69, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x55, 0x0a, 0x14, 0x6d, 0x69, 0x63, 0x68, 0x69, 0x61, 0x65, 0x5f, 0x6d, 0x61,
	0x74, 0x73, 0x75, 0x72, 0x69, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x4d, 0x69, 0x63, 0x68, 0x69, 0x61, 0x65, 0x4d, 0x61, 0x74, 0x73, 0x75, 0x72,
	0x69, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x69, 0x63, 0x68, 0x69, 0x61, 0x65, 0x4d, 0x61,
	0x74, 0x73, 0x75, 0x72, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0e, 0x62, 0x61, 0x72,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xa1, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x42, 0x61, 0x72, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x0d, 0x62, 0x61, 0x72, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x34, 0x0a, 0x08, 0x75, 0x67, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x83, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x55, 0x67, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x07,
	0x75, 0x67, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x11, 0x63, 0x72, 0x79, 0x73, 0x74,
	0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x95, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e,
	0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0c, 0x69, 0x72, 0x6f, 0x64, 0x6f, 0x72,
	0x69, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49,
	0x72, 0x6f, 0x64, 0x6f, 0x72, 0x69, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x72, 0x6f, 0x64,
	0x6f, 0x72, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xd4, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x70, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0xbe, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x53, 0x70, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x73, 0x70, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3a, 0x0a, 0x0a, 0x67, 0x61, 0x63, 0x68, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xa8, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x47, 0x61, 0x63, 0x68, 0x61, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x09, 0x67, 0x61, 0x63, 0x68, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x71, 0x0a, 0x1e, 0x6c,
	0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x6f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x1b, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x6e,
	0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4a,
	0x0a, 0x10, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x64, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0xab, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x52, 0x6f, 0x67, 0x75,
	0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x6f, 0x67, 0x75,
	0x65, 0x44, 0x69, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x13, 0x73, 0x75,
	0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x32, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x8e, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x32, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x10, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x56,
	0x32, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x11, 0x69, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x94, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x73, 0x6c,
	0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x09,
	0x67, 0x65, 0x61, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xef, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x47, 0x65, 0x61, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x67, 0x65, 0x61,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x15, 0x67, 0x72, 0x61, 0x76, 0x65, 0x6e, 0x5f,
	0x69, 0x6e, 0x6e, 0x6f, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xe4,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x47, 0x72, 0x61, 0x76, 0x65, 0x6e, 0x49, 0x6e,
	0x6e, 0x6f, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x13, 0x67, 0x72, 0x61, 0x76, 0x65, 0x6e, 0x49, 0x6e, 0x6e, 0x6f, 0x63,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x13, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x72, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0xfc, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x70, 0x72, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x72, 0x61,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x13, 0x6d, 0x75, 0x71, 0x61, 0x64, 0x61, 0x73,
	0x5f, 0x70, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xc2, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4d, 0x75, 0x71, 0x61, 0x64, 0x61, 0x73, 0x50, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x75, 0x71, 0x61, 0x64, 0x61, 0x73,
	0x50, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a, 0x14, 0x74, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x65, 0x6c, 0x69, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0xe3, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x65, 0x6c, 0x69, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12,
	0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x65, 0x6c, 0x69, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x55, 0x0a, 0x17, 0x72, 0x6f, 0x63, 0x6b, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5f, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x84, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x14, 0x72, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x78,
	0x70, 0x6c, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0c, 0x76, 0x69, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb9, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x56, 0x69, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b,
	0x76, 0x69, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0f, 0x77,
	0x69, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x80,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x77,
	0x69, 0x6e, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x13,
	0x66, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0xc2, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x46, 0x75, 0x6e,
	0x67, 0x75, 0x73, 0x46, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11, 0x66, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x13, 0x63, 0x68, 0x61,
	0x72, 0x5f, 0x61, 0x6d, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0xc6, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x41, 0x6d,
	0x75, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x11, 0x63, 0x68, 0x61, 0x72, 0x41, 0x6d, 0x75, 0x73, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x15, 0x65, 0x66, 0x66, 0x69, 0x67, 0x79,
	0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0xfb, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x45, 0x66, 0x66, 0x69, 0x67, 0x79, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x56, 0x32, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x13, 0x65, 0x66, 0x66, 0x69, 0x67, 0x79, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x11, 0x63,
	0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0xc7, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x48, 0x0a, 0x12, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x5f, 0x62, 0x72, 0x65, 0x61,
	0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xa7, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x42, 0x72, 0x69, 0x63, 0x6b, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x10, 0x62, 0x72, 0x69, 0x63,
	0x6b, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0f,
	0x64, 0x75, 0x65, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x86, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44, 0x75, 0x65, 0x6c, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d,
	0x64, 0x75, 0x65, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a,
	0x10, 0x73, 0x65, 0x61, 0x5f, 0x6c, 0x61, 0x6d, 0x70, 0x5f, 0x76, 0x33, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0xc1, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x61, 0x4c, 0x61,
	0x6d, 0x70, 0x56, 0x33, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x0d, 0x73, 0x65, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x56, 0x33, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3f, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x8d, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x0d, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x63, 0x0a, 0x1b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x68, 0x65, 0x72, 0x63, 0x75,
	0x6c, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0xd5, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f,
	0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x19, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x72, 0x6f, 0x68, 0x65, 0x72, 0x63, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x11, 0x67, 0x63, 0x67, 0x5f, 0x66, 0x65, 0x73,
	0x74, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x80, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x47, 0x43, 0x47, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x63, 0x67,
	0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x12,
	0x66, 0x6c, 0x65, 0x75, 0x72, 0x5f, 0x66, 0x61, 0x69, 0x72, 0x5f, 0x76, 0x32, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0xbe, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x46, 0x6c, 0x65, 0x75,
	0x72, 0x46, 0x61, 0x69, 0x72, 0x56, 0x32, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x6c, 0x65, 0x75, 0x72, 0x46, 0x61, 0x69, 0x72, 0x56, 0x32,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52, 0x0a, 0x16, 0x66, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x5f, 0x66,
	0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x85,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x65, 0x72, 0x56, 0x32, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x13, 0x66, 0x75, 0x6e, 0x67, 0x75, 0x73, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x65, 0x72, 0x56, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0c, 0x61, 0x6b, 0x61, 0x5f,
	0x66, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xf4, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x41, 0x6b, 0x61, 0x46, 0x65, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x6b, 0x61, 0x46, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x5b, 0x0a, 0x1b, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x6f, 0x72, 0x6d, 0x5f, 0x63, 0x61, 0x6e,
	0x6e, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0xf2, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x77, 0x6f, 0x72,
	0x6d, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x18, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x6f, 0x72, 0x6d, 0x43, 0x61, 0x6e,
	0x6e, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a,
	0x11, 0x73, 0x6f, 0x72, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0xb5, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x6f, 0x72, 0x75,
	0x73, 0x68, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x6f, 0x72, 0x75, 0x73, 0x68, 0x54, 0x72, 0x69, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0c, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0xcd, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4a, 0x6f,
	0x75, 0x72, 0x6e, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x6a, 0x6f, 0x75,
	0x72, 0x6e, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52, 0x0a, 0x18, 0x65, 0x66, 0x66, 0x69,
	0x67, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x76, 0x34, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0xa9, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x45, 0x66,
	0x66, 0x69, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x56, 0x34, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x15, 0x65, 0x66, 0x66, 0x69, 0x67, 0x79, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x56, 0x34, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x0c,
	0x67, 0x63, 0x67, 0x5f, 0x70, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x98, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x47, 0x63, 0x67, 0x50, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x0a, 0x67, 0x63, 0x67, 0x50, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d,
	0x0a, 0x0b, 0x75, 0x67, 0x63, 0x5f, 0x76, 0x32, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xdf, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x55, 0x67, 0x63, 0x56, 0x32, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x09, 0x75, 0x67, 0x63, 0x56, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a,
	0x17, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb2, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x15, 0x70, 0x65, 0x6e, 0x75, 0x6d,
	0x62, 0x72, 0x61, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3c, 0x0a, 0x10, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0xb3, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x61,
	0x0a, 0x1d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0xbd, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x48, 0x0a, 0x15, 0x67, 0x63, 0x67, 0x5f, 0x70, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x47, 0x63, 0x67, 0x50, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12, 0x67, 0x63, 0x67, 0x50, 0x76, 0x65, 0x49,
	0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x0f, 0x74,
	0x6f, 0x79, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x3e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x6f, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x6f, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x13, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xe2, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x6e, 0x64, 0x65, 0x72,
	0x73, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x11, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x55, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a, 0x14,
	0x66, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x5f, 0x67, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x8b, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x46, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x47, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x12, 0x66, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x47, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x13, 0x67, 0x63, 0x67, 0x5f, 0x70, 0x76,
	0x65, 0x5f, 0x70, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xe7, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x63, 0x67, 0x50, 0x76, 0x65, 0x50, 0x75, 0x7a,
	0x7a, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x10, 0x67, 0x63, 0x67, 0x50, 0x76,
	0x65, 0x50, 0x75, 0x7a, 0x7a, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x42, 0x0a, 0x14, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x41, 0x0a, 0x13, 0x57, 0x69, 0x73, 0x68, 0x47, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x06, 0x5a, 0x04,
	0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ActivityInfo_proto_rawDescOnce sync.Once
	file_ActivityInfo_proto_rawDescData = file_ActivityInfo_proto_rawDesc
)

func file_ActivityInfo_proto_rawDescGZIP() []byte {
	file_ActivityInfo_proto_rawDescOnce.Do(func() {
		file_ActivityInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_ActivityInfo_proto_rawDescData)
	})
	return file_ActivityInfo_proto_rawDescData
}

var file_ActivityInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ActivityInfo_proto_goTypes = []interface{}{
	(*ActivityInfo)(nil),                              // 0: ActivityInfo
	nil,                                               // 1: ActivityInfo.ActivityCoinMapEntry
	nil,                                               // 2: ActivityInfo.WishGiftNumMapEntry
	(*ActivityWatcherInfo)(nil),                       // 3: ActivityWatcherInfo
	(*ActivityPushTipsData)(nil),                      // 4: ActivityPushTipsData
	(*SeaLampActivityDetailInfo)(nil),                 // 5: SeaLampActivityDetailInfo
	(*CrucibleActivityDetailInfo)(nil),                // 6: CrucibleActivityDetailInfo
	(*SalesmanActivityDetailInfo)(nil),                // 7: SalesmanActivityDetailInfo
	(*TrialAvatarActivityDetailInfo)(nil),             // 8: TrialAvatarActivityDetailInfo
	(*DeliveryActivityDetailInfo)(nil),                // 9: DeliveryActivityDetailInfo
	(*AsterActivityDetailInfo)(nil),                   // 10: AsterActivityDetailInfo
	(*FlightActivityDetailInfo)(nil),                  // 11: FlightActivityDetailInfo
	(*DragonSpineActivityDetailInfo)(nil),             // 12: DragonSpineActivityDetailInfo
	(*EffigyActivityDetailInfo)(nil),                  // 13: EffigyActivityDetailInfo
	(*TreasureMapActivityDetailInfo)(nil),             // 14: TreasureMapActivityDetailInfo
	(*BlessingActivityDetailInfo)(nil),                // 15: BlessingActivityDetailInfo
	(*SeaLampActivityInfo)(nil),                       // 16: SeaLampActivityInfo
	(*ExpeditionActivityDetailInfo)(nil),              // 17: ExpeditionActivityDetailInfo
	(*ArenaChallengeActivityDetailInfo)(nil),          // 18: ArenaChallengeActivityDetailInfo
	(*FleurFairActivityDetailInfo)(nil),               // 19: FleurFairActivityDetailInfo
	(*WaterSpiritActivityDetailInfo)(nil),             // 20: WaterSpiritActivityDetailInfo
	(*ChannelerSlabActivityDetailInfo)(nil),           // 21: ChannelerSlabActivityDetailInfo
	(*MistTrialActivityDetailInfo)(nil),               // 22: MistTrialActivityDetailInfo
	(*HideAndSeekActivityDetailInfo)(nil),             // 23: HideAndSeekActivityDetailInfo
	(*FindHilichurlDetailInfo)(nil),                   // 24: FindHilichurlDetailInfo
	(*SummerTimeDetailInfo)(nil),                      // 25: SummerTimeDetailInfo
	(*BuoyantCombatDetailInfo)(nil),                   // 26: BuoyantCombatDetailInfo
	(*EchoShellDetailInfo)(nil),                       // 27: EchoShellDetailInfo
	(*BounceConjuringActivityDetailInfo)(nil),         // 28: BounceConjuringActivityDetailInfo
	(*BlitzRushActivityDetailInfo)(nil),               // 29: BlitzRushActivityDetailInfo
	(*ChessActivityDetailInfo)(nil),                   // 30: ChessActivityDetailInfo
	(*SumoActivityDetailInfo)(nil),                    // 31: SumoActivityDetailInfo
	(*MoonfinTrialActivityDetailInfo)(nil),            // 32: MoonfinTrialActivityDetailInfo
	(*LunaRiteDetailInfo)(nil),                        // 33: LunaRiteDetailInfo
	(*PlantFlowerActivityDetailInfo)(nil),             // 34: PlantFlowerActivityDetailInfo
	(*MusicGameActivityDetailInfo)(nil),               // 35: MusicGameActivityDetailInfo
	(*RoguelikeDungeonActivityDetailInfo)(nil),        // 36: RoguelikeDungeonActivityDetailInfo
	(*DigActivityDetailInfo)(nil),                     // 37: DigActivityDetailInfo
	(*HachiActivityDetailInfo)(nil),                   // 38: HachiActivityDetailInfo
	(*WinterCampActivityDetailInfo)(nil),              // 39: WinterCampActivityDetailInfo
	(*PotionActivityDetailInfo)(nil),                  // 40: PotionActivityDetailInfo
	(*TanukiTravelActivityDetailInfo)(nil),            // 41: TanukiTravelActivityDetailInfo
	(*LanternRiteActivityDetailInfo)(nil),             // 42: LanternRiteActivityDetailInfo
	(*MichiaeMatsuriActivityDetailInfo)(nil),          // 43: MichiaeMatsuriActivityDetailInfo
	(*BartenderActivityDetailInfo)(nil),               // 44: BartenderActivityDetailInfo
	(*UgcActivityDetailInfo)(nil),                     // 45: UgcActivityDetailInfo
	(*CrystalLinkActivityDetailInfo)(nil),             // 46: CrystalLinkActivityDetailInfo
	(*IrodoriActivityDetailInfo)(nil),                 // 47: IrodoriActivityDetailInfo
	(*PhotoActivityDetailInfo)(nil),                   // 48: PhotoActivityDetailInfo
	(*SpiceActivityDetailInfo)(nil),                   // 49: SpiceActivityDetailInfo
	(*GachaActivityDetailInfo)(nil),                   // 50: GachaActivityDetailInfo
	(*LuminanceStoneChallengeActivityDetailInfo)(nil), // 51: LuminanceStoneChallengeActivityDetailInfo
	(*RogueDiaryActivityDetailInfo)(nil),              // 52: RogueDiaryActivityDetailInfo
	(*SummerTimeV2DetailInfo)(nil),                    // 53: SummerTimeV2DetailInfo
	(*IslandPartyDetailInfo)(nil),                     // 54: IslandPartyDetailInfo
	(*GearActivityDetailInfo)(nil),                    // 55: GearActivityDetailInfo
	(*GravenInnocenceDetailInfo)(nil),                 // 56: GravenInnocenceDetailInfo
	(*InstableSprayDetailInfo)(nil),                   // 57: InstableSprayDetailInfo
	(*MuqadasPotionActivityDetailInfo)(nil),           // 58: MuqadasPotionActivityDetailInfo
	(*TreasureSeelieActivityDetailInfo)(nil),          // 59: TreasureSeelieActivityDetailInfo
	(*RockBoardExploreDetailInfo)(nil),                // 60: RockBoardExploreDetailInfo
	(*VintageActivityDetailInfo)(nil),                 // 61: VintageActivityDetailInfo
	(*WindFieldDetailInfo)(nil),                       // 62: WindFieldDetailInfo
	(*FungusFighterDetailInfo)(nil),                   // 63: FungusFighterDetailInfo
	(*CharAmusementDetailInfo)(nil),                   // 64: CharAmusementDetailInfo
	(*EffigyChallengeV2DetailInfo)(nil),               // 65: EffigyChallengeV2DetailInfo
	(*CoinCollectDetailInfo)(nil),                     // 66: CoinCollectDetailInfo
	(*BrickBreakerDetailInfo)(nil),                    // 67: BrickBreakerDetailInfo
	(*DuelHeartDetailInfo)(nil),                       // 68: DuelHeartDetailInfo
	(*SeaLampV3DetailInfo)(nil),                       // 69: SeaLampV3DetailInfo
	(*TeamChainDetailInfo)(nil),                       // 70: TeamChainDetailInfo
	(*ElectroherculesBattleDetailInfo)(nil),           // 71: ElectroherculesBattleDetailInfo
	(*GCGFestivalDetailInfo)(nil),                     // 72: GCGFestivalDetailInfo
	(*FleurFairV2DetailInfo)(nil),                     // 73: FleurFairV2DetailInfo
	(*FungusFighterV2DetailInfo)(nil),                 // 74: FungusFighterV2DetailInfo
	(*AkaFesDetailInfo)(nil),                          // 75: AkaFesDetailInfo
	(*SandwormCannonDetailInfo)(nil),                  // 76: SandwormCannonDetailInfo
	(*SorushTrialDetailInfo)(nil),                     // 77: SorushTrialDetailInfo
	(*JourneyInfo)(nil),                               // 78: JourneyInfo
	(*EffigyChallengeV4Info)(nil),                     // 79: EffigyChallengeV4Info
	(*GcgPveInfo)(nil),                                // 80: GcgPveInfo
	(*UgcV2Info)(nil),                                 // 81: UgcV2Info
	(*PenumbraAdventureInfo)(nil),                     // 82: PenumbraAdventureInfo
	(*AnimalViewInfo)(nil),                            // 83: AnimalViewInfo
	(*ActivityMultiCharacterInfo)(nil),                // 84: ActivityMultiCharacterInfo
	(*GcgPveInfiniteInfo)(nil),                        // 85: GcgPveInfiniteInfo
	(*ToyBattleInfo)(nil),                             // 86: ToyBattleInfo
	(*PhotoUnderseaInfo)(nil),                         // 87: PhotoUnderseaInfo
	(*FontaineGatherInfo)(nil),                        // 88: FontaineGatherInfo
	(*GcgPvePuzzleInfo)(nil),                          // 89: GcgPvePuzzleInfo
}
var file_ActivityInfo_proto_depIdxs = []int32{
	3,  // 0: ActivityInfo.watcher_info_list:type_name -> ActivityWatcherInfo
	1,  // 1: ActivityInfo.activity_coin_map:type_name -> ActivityInfo.ActivityCoinMapEntry
	2,  // 2: ActivityInfo.wish_gift_num_map:type_name -> ActivityInfo.WishGiftNumMapEntry
	4,  // 3: ActivityInfo.activity_push_tips_data_list:type_name -> ActivityPushTipsData
	5,  // 4: ActivityInfo.sam_lamp_info:type_name -> SeaLampActivityDetailInfo
	6,  // 5: ActivityInfo.crucible_info:type_name -> CrucibleActivityDetailInfo
	7,  // 6: ActivityInfo.salesman_info:type_name -> SalesmanActivityDetailInfo
	8,  // 7: ActivityInfo.trial_avatar_info:type_name -> TrialAvatarActivityDetailInfo
	9,  // 8: ActivityInfo.delivery_info:type_name -> DeliveryActivityDetailInfo
	10, // 9: ActivityInfo.aster_info:type_name -> AsterActivityDetailInfo
	11, // 10: ActivityInfo.flight_info:type_name -> FlightActivityDetailInfo
	12, // 11: ActivityInfo.dragon_spine_info:type_name -> DragonSpineActivityDetailInfo
	13, // 12: ActivityInfo.effigy_info:type_name -> EffigyActivityDetailInfo
	14, // 13: ActivityInfo.treasure_map_info:type_name -> TreasureMapActivityDetailInfo
	15, // 14: ActivityInfo.blessing_info:type_name -> BlessingActivityDetailInfo
	16, // 15: ActivityInfo.sea_lamp_info:type_name -> SeaLampActivityInfo
	17, // 16: ActivityInfo.expedition_info:type_name -> ExpeditionActivityDetailInfo
	18, // 17: ActivityInfo.arena_challenge_info:type_name -> ArenaChallengeActivityDetailInfo
	19, // 18: ActivityInfo.fleur_fair_info:type_name -> FleurFairActivityDetailInfo
	20, // 19: ActivityInfo.water_spirit_info:type_name -> WaterSpiritActivityDetailInfo
	21, // 20: ActivityInfo.challneler_slab_info:type_name -> ChannelerSlabActivityDetailInfo
	22, // 21: ActivityInfo.mist_trial_activity_info:type_name -> MistTrialActivityDetailInfo
	23, // 22: ActivityInfo.hide_and_seek_info:type_name -> HideAndSeekActivityDetailInfo
	24, // 23: ActivityInfo.find_hilichurl_info:type_name -> FindHilichurlDetailInfo
	25, // 24: ActivityInfo.summer_time_info:type_name -> SummerTimeDetailInfo
	26, // 25: ActivityInfo.buoyant_combat_info:type_name -> BuoyantCombatDetailInfo
	27, // 26: ActivityInfo.echo_shell_info:type_name -> EchoShellDetailInfo
	28, // 27: ActivityInfo.bounce_conjuring_info:type_name -> BounceConjuringActivityDetailInfo
	29, // 28: ActivityInfo.blitz_rush_info:type_name -> BlitzRushActivityDetailInfo
	30, // 29: ActivityInfo.chess_info:type_name -> ChessActivityDetailInfo
	31, // 30: ActivityInfo.sumo_info:type_name -> SumoActivityDetailInfo
	32, // 31: ActivityInfo.moonfin_trial_info:type_name -> MoonfinTrialActivityDetailInfo
	33, // 32: ActivityInfo.luna_rite_info:type_name -> LunaRiteDetailInfo
	34, // 33: ActivityInfo.plant_flower_info:type_name -> PlantFlowerActivityDetailInfo
	35, // 34: ActivityInfo.music_game_info:type_name -> MusicGameActivityDetailInfo
	36, // 35: ActivityInfo.roguelike_dungoen_info:type_name -> RoguelikeDungeonActivityDetailInfo
	37, // 36: ActivityInfo.dig_info:type_name -> DigActivityDetailInfo
	38, // 37: ActivityInfo.hachi_info:type_name -> HachiActivityDetailInfo
	39, // 38: ActivityInfo.winter_camp_info:type_name -> WinterCampActivityDetailInfo
	40, // 39: ActivityInfo.potion_info:type_name -> PotionActivityDetailInfo
	41, // 40: ActivityInfo.tanuki_travel_activity_info:type_name -> TanukiTravelActivityDetailInfo
	42, // 41: ActivityInfo.lantern_rite_activity_info:type_name -> LanternRiteActivityDetailInfo
	43, // 42: ActivityInfo.michiae_matsuri_info:type_name -> MichiaeMatsuriActivityDetailInfo
	44, // 43: ActivityInfo.bartender_info:type_name -> BartenderActivityDetailInfo
	45, // 44: ActivityInfo.ugc_info:type_name -> UgcActivityDetailInfo
	46, // 45: ActivityInfo.crystal_link_info:type_name -> CrystalLinkActivityDetailInfo
	47, // 46: ActivityInfo.irodori_info:type_name -> IrodoriActivityDetailInfo
	48, // 47: ActivityInfo.photo_info:type_name -> PhotoActivityDetailInfo
	49, // 48: ActivityInfo.spice_info:type_name -> SpiceActivityDetailInfo
	50, // 49: ActivityInfo.gacha_info:type_name -> GachaActivityDetailInfo
	51, // 50: ActivityInfo.luminance_stone_challenge_info:type_name -> LuminanceStoneChallengeActivityDetailInfo
	52, // 51: ActivityInfo.rogue_diary_info:type_name -> RogueDiaryActivityDetailInfo
	53, // 52: ActivityInfo.summer_time_v2_info:type_name -> SummerTimeV2DetailInfo
	54, // 53: ActivityInfo.island_party_info:type_name -> IslandPartyDetailInfo
	55, // 54: ActivityInfo.gear_info:type_name -> GearActivityDetailInfo
	56, // 55: ActivityInfo.graven_innocence_info:type_name -> GravenInnocenceDetailInfo
	57, // 56: ActivityInfo.instable_spray_info:type_name -> InstableSprayDetailInfo
	58, // 57: ActivityInfo.muqadas_potion_info:type_name -> MuqadasPotionActivityDetailInfo
	59, // 58: ActivityInfo.treasure_seelie_info:type_name -> TreasureSeelieActivityDetailInfo
	60, // 59: ActivityInfo.rock_board_explore_info:type_name -> RockBoardExploreDetailInfo
	61, // 60: ActivityInfo.vintage_info:type_name -> VintageActivityDetailInfo
	62, // 61: ActivityInfo.wind_field_info:type_name -> WindFieldDetailInfo
	63, // 62: ActivityInfo.fungus_fighter_info:type_name -> FungusFighterDetailInfo
	64, // 63: ActivityInfo.char_amusement_info:type_name -> CharAmusementDetailInfo
	65, // 64: ActivityInfo.effigy_challenge_info:type_name -> EffigyChallengeV2DetailInfo
	66, // 65: ActivityInfo.coin_collect_info:type_name -> CoinCollectDetailInfo
	67, // 66: ActivityInfo.brick_breaker_info:type_name -> BrickBreakerDetailInfo
	68, // 67: ActivityInfo.duel_heart_info:type_name -> DuelHeartDetailInfo
	69, // 68: ActivityInfo.sea_lamp_v3_info:type_name -> SeaLampV3DetailInfo
	70, // 69: ActivityInfo.team_chain_info:type_name -> TeamChainDetailInfo
	71, // 70: ActivityInfo.electrohercules_battle_info:type_name -> ElectroherculesBattleDetailInfo
	72, // 71: ActivityInfo.gcg_festival_info:type_name -> GCGFestivalDetailInfo
	73, // 72: ActivityInfo.fleur_fair_v2_info:type_name -> FleurFairV2DetailInfo
	74, // 73: ActivityInfo.fungus_fighter_v2_info:type_name -> FungusFighterV2DetailInfo
	75, // 74: ActivityInfo.aka_fes_info:type_name -> AkaFesDetailInfo
	76, // 75: ActivityInfo.sandworm_cannon_detail_info:type_name -> SandwormCannonDetailInfo
	77, // 76: ActivityInfo.sorush_trial_info:type_name -> SorushTrialDetailInfo
	78, // 77: ActivityInfo.journey_info:type_name -> JourneyInfo
	79, // 78: ActivityInfo.effigy_challenge_v4_info:type_name -> EffigyChallengeV4Info
	80, // 79: ActivityInfo.gcg_pve_info:type_name -> GcgPveInfo
	81, // 80: ActivityInfo.ugc_v2_info:type_name -> UgcV2Info
	82, // 81: ActivityInfo.penumbra_adventure_info:type_name -> PenumbraAdventureInfo
	83, // 82: ActivityInfo.animal_view_info:type_name -> AnimalViewInfo
	84, // 83: ActivityInfo.activity_multi_character_info:type_name -> ActivityMultiCharacterInfo
	85, // 84: ActivityInfo.gcg_pve_infinite_info:type_name -> GcgPveInfiniteInfo
	86, // 85: ActivityInfo.toy_battle_info:type_name -> ToyBattleInfo
	87, // 86: ActivityInfo.photo_undersea_info:type_name -> PhotoUnderseaInfo
	88, // 87: ActivityInfo.fontaine_gather_info:type_name -> FontaineGatherInfo
	89, // 88: ActivityInfo.gcg_pve_puzzle_info:type_name -> GcgPvePuzzleInfo
	89, // [89:89] is the sub-list for method output_type
	89, // [89:89] is the sub-list for method input_type
	89, // [89:89] is the sub-list for extension type_name
	89, // [89:89] is the sub-list for extension extendee
	0,  // [0:89] is the sub-list for field type_name
}

func init() { file_ActivityInfo_proto_init() }
func file_ActivityInfo_proto_init() {
	if File_ActivityInfo_proto != nil {
		return
	}
	file_ActivityWatcherInfo_proto_init()
	file_ActivityPushTipsData_proto_init()
	file_SeaLampActivityDetailInfo_proto_init()
	file_CrucibleActivityDetailInfo_proto_init()
	file_SalesmanActivityDetailInfo_proto_init()
	file_TrialAvatarActivityDetailInfo_proto_init()
	file_DeliveryActivityDetailInfo_proto_init()
	file_AsterActivityDetailInfo_proto_init()
	file_FlightActivityDetailInfo_proto_init()
	file_DragonSpineActivityDetailInfo_proto_init()
	file_EffigyActivityDetailInfo_proto_init()
	file_TreasureMapActivityDetailInfo_proto_init()
	file_BlessingActivityDetailInfo_proto_init()
	file_SeaLampActivityInfo_proto_init()
	file_ExpeditionActivityDetailInfo_proto_init()
	file_ArenaChallengeActivityDetailInfo_proto_init()
	file_FleurFairActivityDetailInfo_proto_init()
	file_WaterSpiritActivityDetailInfo_proto_init()
	file_ChannelerSlabActivityDetailInfo_proto_init()
	file_MistTrialActivityDetailInfo_proto_init()
	file_HideAndSeekActivityDetailInfo_proto_init()
	file_FindHilichurlDetailInfo_proto_init()
	file_SummerTimeDetailInfo_proto_init()
	file_BuoyantCombatDetailInfo_proto_init()
	file_EchoShellDetailInfo_proto_init()
	file_BounceConjuringActivityDetailInfo_proto_init()
	file_BlitzRushActivityDetailInfo_proto_init()
	file_ChessActivityDetailInfo_proto_init()
	file_SumoActivityDetailInfo_proto_init()
	file_MoonfinTrialActivityDetailInfo_proto_init()
	file_LunaRiteDetailInfo_proto_init()
	file_PlantFlowerActivityDetailInfo_proto_init()
	file_MusicGameActivityDetailInfo_proto_init()
	file_RoguelikeDungeonActivityDetailInfo_proto_init()
	file_DigActivityDetailInfo_proto_init()
	file_HachiActivityDetailInfo_proto_init()
	file_WinterCampActivityDetailInfo_proto_init()
	file_PotionActivityDetailInfo_proto_init()
	file_TanukiTravelActivityDetailInfo_proto_init()
	file_LanternRiteActivityDetailInfo_proto_init()
	file_MichiaeMatsuriActivityDetailInfo_proto_init()
	file_BartenderActivityDetailInfo_proto_init()
	file_UgcActivityDetailInfo_proto_init()
	file_CrystalLinkActivityDetailInfo_proto_init()
	file_IrodoriActivityDetailInfo_proto_init()
	file_PhotoActivityDetailInfo_proto_init()
	file_SpiceActivityDetailInfo_proto_init()
	file_GachaActivityDetailInfo_proto_init()
	file_LuminanceStoneChallengeActivityDetailInfo_proto_init()
	file_RogueDiaryActivityDetailInfo_proto_init()
	file_SummerTimeV2DetailInfo_proto_init()
	file_IslandPartyDetailInfo_proto_init()
	file_GearActivityDetailInfo_proto_init()
	file_GravenInnocenceDetailInfo_proto_init()
	file_InstableSprayDetailInfo_proto_init()
	file_MuqadasPotionActivityDetailInfo_proto_init()
	file_TreasureSeelieActivityDetailInfo_proto_init()
	file_RockBoardExploreDetailInfo_proto_init()
	file_VintageActivityDetailInfo_proto_init()
	file_WindFieldDetailInfo_proto_init()
	file_FungusFighterDetailInfo_proto_init()
	file_CharAmusementDetailInfo_proto_init()
	file_EffigyChallengeV2DetailInfo_proto_init()
	file_CoinCollectDetailInfo_proto_init()
	file_BrickBreakerDetailInfo_proto_init()
	file_DuelHeartDetailInfo_proto_init()
	file_SeaLampV3DetailInfo_proto_init()
	file_TeamChainDetailInfo_proto_init()
	file_ElectroherculesBattleDetailInfo_proto_init()
	file_GCGFestivalDetailInfo_proto_init()
	file_FleurFairV2DetailInfo_proto_init()
	file_FungusFighterV2DetailInfo_proto_init()
	file_AkaFesDetailInfo_proto_init()
	file_SandwormCannonDetailInfo_proto_init()
	file_SorushTrialDetailInfo_proto_init()
	file_JourneyInfo_proto_init()
	file_EffigyChallengeV4Info_proto_init()
	file_GcgPveInfo_proto_init()
	file_UgcV2Info_proto_init()
	file_PenumbraAdventureInfo_proto_init()
	file_AnimalViewInfo_proto_init()
	file_ActivityMultiCharacterInfo_proto_init()
	file_GcgPveInfiniteInfo_proto_init()
	file_ToyBattleInfo_proto_init()
	file_PhotoUnderseaInfo_proto_init()
	file_FontaineGatherInfo_proto_init()
	file_GcgPvePuzzleInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ActivityInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ActivityInfo_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ActivityInfo_SamLampInfo)(nil),
		(*ActivityInfo_CrucibleInfo)(nil),
		(*ActivityInfo_SalesmanInfo)(nil),
		(*ActivityInfo_TrialAvatarInfo)(nil),
		(*ActivityInfo_DeliveryInfo)(nil),
		(*ActivityInfo_AsterInfo)(nil),
		(*ActivityInfo_FlightInfo)(nil),
		(*ActivityInfo_DragonSpineInfo)(nil),
		(*ActivityInfo_EffigyInfo)(nil),
		(*ActivityInfo_TreasureMapInfo)(nil),
		(*ActivityInfo_BlessingInfo)(nil),
		(*ActivityInfo_SeaLampInfo)(nil),
		(*ActivityInfo_ExpeditionInfo)(nil),
		(*ActivityInfo_ArenaChallengeInfo)(nil),
		(*ActivityInfo_FleurFairInfo)(nil),
		(*ActivityInfo_WaterSpiritInfo)(nil),
		(*ActivityInfo_ChallnelerSlabInfo)(nil),
		(*ActivityInfo_MistTrialActivityInfo)(nil),
		(*ActivityInfo_HideAndSeekInfo)(nil),
		(*ActivityInfo_FindHilichurlInfo)(nil),
		(*ActivityInfo_SummerTimeInfo)(nil),
		(*ActivityInfo_BuoyantCombatInfo)(nil),
		(*ActivityInfo_EchoShellInfo)(nil),
		(*ActivityInfo_BounceConjuringInfo)(nil),
		(*ActivityInfo_BlitzRushInfo)(nil),
		(*ActivityInfo_ChessInfo)(nil),
		(*ActivityInfo_SumoInfo)(nil),
		(*ActivityInfo_MoonfinTrialInfo)(nil),
		(*ActivityInfo_LunaRiteInfo)(nil),
		(*ActivityInfo_PlantFlowerInfo)(nil),
		(*ActivityInfo_MusicGameInfo)(nil),
		(*ActivityInfo_RoguelikeDungoenInfo)(nil),
		(*ActivityInfo_DigInfo)(nil),
		(*ActivityInfo_HachiInfo)(nil),
		(*ActivityInfo_WinterCampInfo)(nil),
		(*ActivityInfo_PotionInfo)(nil),
		(*ActivityInfo_TanukiTravelActivityInfo)(nil),
		(*ActivityInfo_LanternRiteActivityInfo)(nil),
		(*ActivityInfo_MichiaeMatsuriInfo)(nil),
		(*ActivityInfo_BartenderInfo)(nil),
		(*ActivityInfo_UgcInfo)(nil),
		(*ActivityInfo_CrystalLinkInfo)(nil),
		(*ActivityInfo_IrodoriInfo)(nil),
		(*ActivityInfo_PhotoInfo)(nil),
		(*ActivityInfo_SpiceInfo)(nil),
		(*ActivityInfo_GachaInfo)(nil),
		(*ActivityInfo_LuminanceStoneChallengeInfo)(nil),
		(*ActivityInfo_RogueDiaryInfo)(nil),
		(*ActivityInfo_SummerTimeV2Info)(nil),
		(*ActivityInfo_IslandPartyInfo)(nil),
		(*ActivityInfo_GearInfo)(nil),
		(*ActivityInfo_GravenInnocenceInfo)(nil),
		(*ActivityInfo_InstableSprayInfo)(nil),
		(*ActivityInfo_MuqadasPotionInfo)(nil),
		(*ActivityInfo_TreasureSeelieInfo)(nil),
		(*ActivityInfo_RockBoardExploreInfo)(nil),
		(*ActivityInfo_VintageInfo)(nil),
		(*ActivityInfo_WindFieldInfo)(nil),
		(*ActivityInfo_FungusFighterInfo)(nil),
		(*ActivityInfo_CharAmusementInfo)(nil),
		(*ActivityInfo_EffigyChallengeInfo)(nil),
		(*ActivityInfo_CoinCollectInfo)(nil),
		(*ActivityInfo_BrickBreakerInfo)(nil),
		(*ActivityInfo_DuelHeartInfo)(nil),
		(*ActivityInfo_SeaLampV3Info)(nil),
		(*ActivityInfo_TeamChainInfo)(nil),
		(*ActivityInfo_ElectroherculesBattleInfo)(nil),
		(*ActivityInfo_GcgFestivalInfo)(nil),
		(*ActivityInfo_FleurFairV2Info)(nil),
		(*ActivityInfo_FungusFighterV2Info)(nil),
		(*ActivityInfo_AkaFesInfo)(nil),
		(*ActivityInfo_SandwormCannonDetailInfo)(nil),
		(*ActivityInfo_SorushTrialInfo)(nil),
		(*ActivityInfo_JourneyInfo)(nil),
		(*ActivityInfo_EffigyChallengeV4Info)(nil),
		(*ActivityInfo_GcgPveInfo)(nil),
		(*ActivityInfo_UgcV2Info)(nil),
		(*ActivityInfo_PenumbraAdventureInfo)(nil),
		(*ActivityInfo_AnimalViewInfo)(nil),
		(*ActivityInfo_ActivityMultiCharacterInfo)(nil),
		(*ActivityInfo_GcgPveInfiniteInfo)(nil),
		(*ActivityInfo_ToyBattleInfo)(nil),
		(*ActivityInfo_PhotoUnderseaInfo)(nil),
		(*ActivityInfo_FontaineGatherInfo)(nil),
		(*ActivityInfo_GcgPvePuzzleInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ActivityInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ActivityInfo_proto_goTypes,
		DependencyIndexes: file_ActivityInfo_proto_depIdxs,
		MessageInfos:      file_ActivityInfo_proto_msgTypes,
	}.Build()
	File_ActivityInfo_proto = out.File
	file_ActivityInfo_proto_rawDesc = nil
	file_ActivityInfo_proto_goTypes = nil
	file_ActivityInfo_proto_depIdxs = nil
}
